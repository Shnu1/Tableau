<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10300.17.0515.2100                               -->
<workbook original-version='10.3' source-build='10.3.0 (10300.17.0515.2100)' source-platform='mac' version='10.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Flying High Flights 2015+' inline='true' name='federated.06vo0fg07f8zb418rfy960zh7zkj' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Flying High Flights 2015' name='textscan.0i733n608a88te15hidjt0miozh9'>
            <connection class='textscan' directory='/Users/vishnu_mamidipudi/Documents/Big_Data/DataCamp/Tableau/Fly_High_Airlines/SDS-Workshop-032-Data' filename='Flying High Flights 2015.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Flying High Flights 2015.csv].[Destination Airport]' />
              <expression op='[Airports.csv1].[Airport_Code]' />
            </expression>
          </clause>
          <relation join='inner' type='join'>
            <clause type='join'>
              <expression op='='>
                <expression op='[Flying High Flights 2015.csv].[Origin Airport]' />
                <expression op='[Airports.csv].[Airport_Code]' />
              </expression>
            </clause>
            <relation join='inner' type='join'>
              <clause type='join'>
                <expression op='='>
                  <expression op='[Flying High Flights 2015.csv].[Airline]' />
                  <expression op='[Airlines.csv].[Airline_Code]' />
                </expression>
              </clause>
              <relation connection='textscan.0i733n608a88te15hidjt0miozh9' name='Flying High Flights 2015.csv' table='[Flying High Flights 2015#csv]' type='table'>
                <columns character-set='UTF-16LE' header='yes' locale='en_IN' separator='&#9;'>
                  <column datatype='string' name='Airline' ordinal='0' />
                  <column datatype='integer' name='Airline Delay' ordinal='1' />
                  <column datatype='integer' name='Air System Delay' ordinal='2' />
                  <column datatype='integer' name='Arrival Delay' ordinal='3' />
                  <column datatype='date' name='Date' ordinal='4' />
                  <column datatype='string' name='Destination Airport' ordinal='5' />
                  <column datatype='integer' name='Flight Number' ordinal='6' />
                  <column datatype='integer' name='Late Aircraft Delay' ordinal='7' />
                  <column datatype='string' name='Origin Airport' ordinal='8' />
                  <column datatype='integer' name='Security Delay' ordinal='9' />
                  <column datatype='integer' name='Weather Delay' ordinal='10' />
                </columns>
              </relation>
              <relation connection='textscan.0i733n608a88te15hidjt0miozh9' name='Airlines.csv' table='[Airlines#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='Airline_Code' ordinal='0' />
                  <column datatype='string' name='Airline' ordinal='1' />
                </columns>
              </relation>
            </relation>
            <relation connection='textscan.0i733n608a88te15hidjt0miozh9' name='Airports.csv' table='[Airports#csv]' type='table'>
              <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                <column datatype='string' name='Airport_Code' ordinal='0' />
                <column datatype='string' name='Airport_name' ordinal='1' />
                <column datatype='string' name='City' ordinal='2' />
                <column datatype='string' name='State' ordinal='3' />
                <column datatype='string' name='Country' ordinal='4' />
                <column datatype='real' name='Latitude' ordinal='5' />
                <column datatype='real' name='Longitude' ordinal='6' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.0i733n608a88te15hidjt0miozh9' name='Airports.csv1' table='[Airports#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='string' name='Airport_Code' ordinal='0' />
              <column datatype='string' name='Airport_name' ordinal='1' />
              <column datatype='string' name='City' ordinal='2' />
              <column datatype='string' name='State' ordinal='3' />
              <column datatype='string' name='Country' ordinal='4' />
              <column datatype='real' name='Latitude' ordinal='5' />
              <column datatype='real' name='Longitude' ordinal='6' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Air System Delay]' value='[Flying High Flights 2015.csv].[Air System Delay]' />
          <map key='[Airline (Airlines.csv)]' value='[Airlines.csv].[Airline]' />
          <map key='[Airline Delay]' value='[Flying High Flights 2015.csv].[Airline Delay]' />
          <map key='[Airline]' value='[Flying High Flights 2015.csv].[Airline]' />
          <map key='[Airline_Code]' value='[Airlines.csv].[Airline_Code]' />
          <map key='[Airport_Code (Airports.csv1)]' value='[Airports.csv1].[Airport_Code]' />
          <map key='[Airport_Code]' value='[Airports.csv].[Airport_Code]' />
          <map key='[Airport_name (Airports.csv1)]' value='[Airports.csv1].[Airport_name]' />
          <map key='[Airport_name]' value='[Airports.csv].[Airport_name]' />
          <map key='[Arrival Delay]' value='[Flying High Flights 2015.csv].[Arrival Delay]' />
          <map key='[City (Airports.csv1)]' value='[Airports.csv1].[City]' />
          <map key='[City]' value='[Airports.csv].[City]' />
          <map key='[Country (Airports.csv1)]' value='[Airports.csv1].[Country]' />
          <map key='[Country]' value='[Airports.csv].[Country]' />
          <map key='[Date]' value='[Flying High Flights 2015.csv].[Date]' />
          <map key='[Destination Airport]' value='[Flying High Flights 2015.csv].[Destination Airport]' />
          <map key='[Flight Number]' value='[Flying High Flights 2015.csv].[Flight Number]' />
          <map key='[Late Aircraft Delay]' value='[Flying High Flights 2015.csv].[Late Aircraft Delay]' />
          <map key='[Latitude (Airports.csv1)]' value='[Airports.csv1].[Latitude]' />
          <map key='[Latitude]' value='[Airports.csv].[Latitude]' />
          <map key='[Longitude (Airports.csv1)]' value='[Airports.csv1].[Longitude]' />
          <map key='[Longitude]' value='[Airports.csv].[Longitude]' />
          <map key='[Origin Airport]' value='[Flying High Flights 2015.csv].[Origin Airport]' />
          <map key='[Security Delay]' value='[Flying High Flights 2015.csv].[Security Delay]' />
          <map key='[State (Airports.csv1)]' value='[Airports.csv1].[State]' />
          <map key='[State]' value='[Airports.csv].[State]' />
          <map key='[Weather Delay]' value='[Flying High Flights 2015.csv].[Weather Delay]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Airline</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Airline]</local-name>
            <parent-name>[Flying High Flights 2015.csv]</parent-name>
            <remote-alias>Airline</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airline Delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Airline Delay]</local-name>
            <parent-name>[Flying High Flights 2015.csv]</parent-name>
            <remote-alias>Airline Delay</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Air System Delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Air System Delay]</local-name>
            <parent-name>[Flying High Flights 2015.csv]</parent-name>
            <remote-alias>Air System Delay</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Arrival Delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Arrival Delay]</local-name>
            <parent-name>[Flying High Flights 2015.csv]</parent-name>
            <remote-alias>Arrival Delay</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Flying High Flights 2015.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Destination Airport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Destination Airport]</local-name>
            <parent-name>[Flying High Flights 2015.csv]</parent-name>
            <remote-alias>Destination Airport</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flight Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Flight Number]</local-name>
            <parent-name>[Flying High Flights 2015.csv]</parent-name>
            <remote-alias>Flight Number</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Late Aircraft Delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Late Aircraft Delay]</local-name>
            <parent-name>[Flying High Flights 2015.csv]</parent-name>
            <remote-alias>Late Aircraft Delay</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin Airport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Origin Airport]</local-name>
            <parent-name>[Flying High Flights 2015.csv]</parent-name>
            <remote-alias>Origin Airport</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Security Delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Security Delay]</local-name>
            <parent-name>[Flying High Flights 2015.csv]</parent-name>
            <remote-alias>Security Delay</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weather Delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Weather Delay]</local-name>
            <parent-name>[Flying High Flights 2015.csv]</parent-name>
            <remote-alias>Weather Delay</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Flying High Flights 2015.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-16LE&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airline_Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Airline_Code]</local-name>
            <parent-name>[Airlines.csv]</parent-name>
            <remote-alias>Airline_Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airline</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Airline (Airlines.csv)]</local-name>
            <parent-name>[Airlines.csv]</parent-name>
            <remote-alias>Airline</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Airlines.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airport_Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Airport_Code]</local-name>
            <parent-name>[Airports.csv]</parent-name>
            <remote-alias>Airport_Code</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airport_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Airport_name]</local-name>
            <parent-name>[Airports.csv]</parent-name>
            <remote-alias>Airport_name</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Airports.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Airports.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Airports.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Airports.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Airports.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Airports.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airport_Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Airport_Code (Airports.csv1)]</local-name>
            <parent-name>[Airports.csv1]</parent-name>
            <remote-alias>Airport_Code</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airport_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Airport_name (Airports.csv1)]</local-name>
            <parent-name>[Airports.csv1]</parent-name>
            <remote-alias>Airport_name</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City (Airports.csv1)]</local-name>
            <parent-name>[Airports.csv1]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State (Airports.csv1)]</local-name>
            <parent-name>[Airports.csv1]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country (Airports.csv1)]</local-name>
            <parent-name>[Airports.csv1]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude (Airports.csv1)]</local-name>
            <parent-name>[Airports.csv1]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>25</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude (Airports.csv1)]</local-name>
            <parent-name>[Airports.csv1]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>26</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Airports.csv1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Air System Delay]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Airline Delay]' role='measure' type='quantitative' />
      <column caption='Airline Code' datatype='string' hidden='true' name='[Airline_Code]' role='dimension' type='nominal' />
      <column caption='Airport Code (Airports.csv1)' datatype='string' hidden='true' name='[Airport_Code (Airports.csv1)]' role='dimension' type='nominal' />
      <column caption='Airport Code' datatype='string' hidden='true' name='[Airport_Code]' role='dimension' type='nominal' />
      <column caption='Destination Airport Name' datatype='string' name='[Airport_name (Airports.csv1)]' role='dimension' type='nominal' />
      <column caption='Origin Airport Name' datatype='string' name='[Airport_name]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Arrival Delay]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Col Index' datatype='integer' name='[Calculation_32932615240630272]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='Case MONTH([Date])&#10;WHEN 1 THEN 1&#10;WHEN 2 THEN 2&#10;WHEN 3 THEN 3&#10;WHEN 4 THEN 1&#10;WHEN 5 THEN 2&#10;WHEN 6 THEN 3&#10;WHEN 7 THEN 1&#10;WHEN 8 THEN 2&#10;WHEN 9 THEN 3&#10;WHEN 10 THEN 1&#10;WHEN 11 THEN 2&#10;WHEN 12 THEN 3&#10;END' />
      </column>
      <column aggregation='Sum' caption='Row Index' datatype='integer' name='[Calculation_32932615241969665]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATEPART(&apos;week&apos;, [Date]) - {FIXED DATEPART(&apos;month&apos;, [Date]): min(DATEPART(&apos;week&apos;, [Date]))}' />
      </column>
      <column caption='Total Delay' datatype='integer' name='[Calculation_32932615248138242]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Air System Delay] + [Airline Delay] + [Arrival Delay] + [Late Aircraft Delay] + [Security Delay] + [Weather Delay]' />
      </column>
      <column caption='Destination City' datatype='string' name='[City (Airports.csv1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Origin City' datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Destination Country' datatype='string' name='[Country (Airports.csv1)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Origin Country' datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Flight Number]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Late Aircraft Delay]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Destination Latitude' datatype='real' name='[Latitude (Airports.csv1)]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Origin Latitude' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Destination Longitude' datatype='real' name='[Longitude (Airports.csv1)]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column aggregation='Avg' caption='Origin Longitude' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Destination State' datatype='string' name='[State (Airports.csv1)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Origin State' datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[Air System Delay]' derivation='Sum' name='[sum:Air System Delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Airline Delay]' derivation='Sum' name='[sum:Airline Delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Arrival Delay]' derivation='Sum' name='[sum:Arrival Delay:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Late Aircraft Delay]' derivation='Sum' name='[sum:Late Aircraft Delay:qk]' pivot='key' type='quantitative' />
      <drill-paths>
        <drill-path name='Country, State, City'>
          <field>[Country]</field>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
        <drill-path name='Destination Country, Destination State'>
          <field>[Country (Airports.csv1)]</field>
          <field>[State (Airports.csv1)]</field>
          <field>[City (Airports.csv1)]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.747604' measure-ordering='alphabetic' measure-percentage='0.252396' rowDisplayCount='100000' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.06vo0fg07f8zb418rfy960zh7zkj].[sum:Air System Delay:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.06vo0fg07f8zb418rfy960zh7zkj].[sum:Late Aircraft Delay:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.06vo0fg07f8zb418rfy960zh7zkj].[sum:Arrival Delay:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.06vo0fg07f8zb418rfy960zh7zkj].[sum:Airline Delay:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Pivot' inline='true' name='federated.1n3x2a71az2iuw118dnpz0r7l9o8' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Flying High Flights 2015' name='textscan.05oc54w09ybg4f10iq51g0no6ft6'>
            <connection class='textscan' directory='/Users/vishnu_mamidipudi/Documents/Big_Data/DataCamp/Tableau/Fly_High_Airlines/SDS-Workshop-032-Data' filename='Flying High Flights 2015.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation name='Pivot' type='pivot'>
          <columns>
            <column datatype='string' name='Pivot Field Names' />
            <column datatype='integer' name='Pivot Field Values' />
          </columns>
          <tag name='Pivot Field Names'>
            <value name='[Air System Delay]' />
            <value name='[Airline Delay]' />
            <value name='[Arrival Delay]' />
            <value name='[Late Aircraft Delay]' />
            <value name='[Security Delay]' />
            <value name='[Weather Delay]' />
          </tag>
          <groups>
            <group name='Pivot Field Values'>
              <field name='[Flying High Flights 2015.csv].[Air System Delay]' />
              <field name='[Flying High Flights 2015.csv].[Airline Delay]' />
              <field name='[Flying High Flights 2015.csv].[Arrival Delay]' />
              <field name='[Flying High Flights 2015.csv].[Late Aircraft Delay]' />
              <field name='[Flying High Flights 2015.csv].[Security Delay]' />
              <field name='[Flying High Flights 2015.csv].[Weather Delay]' />
            </group>
          </groups>
          <relation connection='textscan.05oc54w09ybg4f10iq51g0no6ft6' name='Flying High Flights 2015.csv' table='[Flying High Flights 2015#csv]' type='table'>
            <columns character-set='UTF-16LE' header='yes' locale='en_IN' separator='&#9;'>
              <column datatype='string' name='Airline' ordinal='0' />
              <column datatype='integer' name='Airline Delay' ordinal='1' />
              <column datatype='integer' name='Air System Delay' ordinal='2' />
              <column datatype='integer' name='Arrival Delay' ordinal='3' />
              <column datatype='date' name='Date' ordinal='4' />
              <column datatype='string' name='Destination Airport' ordinal='5' />
              <column datatype='integer' name='Flight Number' ordinal='6' />
              <column datatype='integer' name='Late Aircraft Delay' ordinal='7' />
              <column datatype='string' name='Origin Airport' ordinal='8' />
              <column datatype='integer' name='Security Delay' ordinal='9' />
              <column datatype='integer' name='Weather Delay' ordinal='10' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Airline</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Airline]</local-name>
            <parent-name>[Flying High Flights 2015.csv]</parent-name>
            <remote-alias>Airline</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Flying High Flights 2015.csv]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;date&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Destination Airport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Destination Airport]</local-name>
            <parent-name>[Flying High Flights 2015.csv]</parent-name>
            <remote-alias>Destination Airport</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flight Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Flight Number]</local-name>
            <parent-name>[Flying High Flights 2015.csv]</parent-name>
            <remote-alias>Flight Number</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin Airport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Origin Airport]</local-name>
            <parent-name>[Flying High Flights 2015.csv]</parent-name>
            <remote-alias>Origin Airport</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Flying High Flights 2015.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-16LE&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;\\t&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Names</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Pivot Field Names]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Names</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Pivot Field Values</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Pivot Field Values]</local-name>
            <parent-name>[Pivot]</parent-name>
            <remote-alias>Pivot Field Values</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Flight Number]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Delay Types' datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
      <column caption='Delay Values' datatype='integer' name='[Pivot Field Values]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.570248' measure-ordering='alphabetic' measure-percentage='0.429752' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='Union' inline='true' name='federated.03svila12tnhv514t5wm1002i958' version='10.3'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Flying High Flights 2015' name='textscan.0twobqw0l4twha1a0s7w90pd0wv8'>
            <connection class='textscan' directory='/Users/vishnu_mamidipudi/Documents/Big_Data/DataCamp/Tableau/Fly_High_Airlines/SDS-Workshop-032-Data' filename='Flying High Flights 2015.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='IF [Flying High Flights 2015.csv+].[Table Name] = &quot;Flying High Flights 2015.csv&quot; THEN [Flying High Flights 2015.csv+].[Origin Airport]&#10;ELSE [Flying High Flights 2015.csv+].[Destination Airport]&#10;END' />
              <expression op='[Airports.csv].[Airport_Code]' />
            </expression>
          </clause>
          <relation all='true' name='Flying High Flights 2015.csv+' type='union'>
            <columns character-set='UTF-16LE' header='yes' locale='en_IN' separator='&#9;'>
              <column datatype='string' name='Airline' />
              <column datatype='integer' name='Airline Delay' />
              <column datatype='integer' name='Air System Delay' />
              <column datatype='integer' name='Arrival Delay' />
              <column datatype='date' name='Date' />
              <column datatype='string' name='Destination Airport' />
              <column datatype='integer' name='Flight Number' />
              <column datatype='integer' name='Late Aircraft Delay' />
              <column datatype='string' name='Origin Airport' />
              <column datatype='integer' name='Security Delay' />
              <column datatype='integer' name='Weather Delay' />
              <column datatype='string' name='Table Name' />
            </columns>
            <relation connection='textscan.0twobqw0l4twha1a0s7w90pd0wv8' name='Flying High Flights 2015.csv' table='[Flying High Flights 2015#csv]' type='table'>
              <columns character-set='UTF-16LE' header='yes' locale='en_IN' separator='&#9;'>
                <column datatype='string' name='Airline' ordinal='0' />
                <column datatype='integer' name='Airline Delay' ordinal='1' />
                <column datatype='integer' name='Air System Delay' ordinal='2' />
                <column datatype='integer' name='Arrival Delay' ordinal='3' />
                <column datatype='date' name='Date' ordinal='4' />
                <column datatype='string' name='Destination Airport' ordinal='5' />
                <column datatype='integer' name='Flight Number' ordinal='6' />
                <column datatype='integer' name='Late Aircraft Delay' ordinal='7' />
                <column datatype='string' name='Origin Airport' ordinal='8' />
                <column datatype='integer' name='Security Delay' ordinal='9' />
                <column datatype='integer' name='Weather Delay' ordinal='10' />
              </columns>
            </relation>
            <relation connection='textscan.0twobqw0l4twha1a0s7w90pd0wv8' name='Flying High Flights 2015.csv1' table='[Flying High Flights 2015#csv]' type='table'>
              <columns character-set='UTF-16LE' header='yes' locale='en_IN' separator='&#9;'>
                <column datatype='string' name='Airline' ordinal='0' />
                <column datatype='integer' name='Airline Delay' ordinal='1' />
                <column datatype='integer' name='Air System Delay' ordinal='2' />
                <column datatype='integer' name='Arrival Delay' ordinal='3' />
                <column datatype='date' name='Date' ordinal='4' />
                <column datatype='string' name='Destination Airport' ordinal='5' />
                <column datatype='integer' name='Flight Number' ordinal='6' />
                <column datatype='integer' name='Late Aircraft Delay' ordinal='7' />
                <column datatype='string' name='Origin Airport' ordinal='8' />
                <column datatype='integer' name='Security Delay' ordinal='9' />
                <column datatype='integer' name='Weather Delay' ordinal='10' />
              </columns>
            </relation>
          </relation>
          <relation connection='textscan.0twobqw0l4twha1a0s7w90pd0wv8' name='Airports.csv' table='[Airports#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
              <column datatype='string' name='Airport_Code' ordinal='0' />
              <column datatype='string' name='Airport_name' ordinal='1' />
              <column datatype='string' name='City' ordinal='2' />
              <column datatype='string' name='State' ordinal='3' />
              <column datatype='string' name='Country' ordinal='4' />
              <column datatype='real' name='Latitude' ordinal='5' />
              <column datatype='real' name='Longitude' ordinal='6' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Flying High Flights 2015.csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airline</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Airline]</local-name>
            <parent-name>[Flying High Flights 2015.csv+]</parent-name>
            <remote-alias>Airline</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airline Delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Airline Delay]</local-name>
            <parent-name>[Flying High Flights 2015.csv+]</parent-name>
            <remote-alias>Airline Delay</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Air System Delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Air System Delay]</local-name>
            <parent-name>[Flying High Flights 2015.csv+]</parent-name>
            <remote-alias>Air System Delay</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Arrival Delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Arrival Delay]</local-name>
            <parent-name>[Flying High Flights 2015.csv+]</parent-name>
            <remote-alias>Arrival Delay</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Flying High Flights 2015.csv+]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Destination Airport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Destination Airport]</local-name>
            <parent-name>[Flying High Flights 2015.csv+]</parent-name>
            <remote-alias>Destination Airport</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Flight Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Flight Number]</local-name>
            <parent-name>[Flying High Flights 2015.csv+]</parent-name>
            <remote-alias>Flight Number</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Late Aircraft Delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Late Aircraft Delay]</local-name>
            <parent-name>[Flying High Flights 2015.csv+]</parent-name>
            <remote-alias>Late Aircraft Delay</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Origin Airport</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Origin Airport]</local-name>
            <parent-name>[Flying High Flights 2015.csv+]</parent-name>
            <remote-alias>Origin Airport</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Security Delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Security Delay]</local-name>
            <parent-name>[Flying High Flights 2015.csv+]</parent-name>
            <remote-alias>Security Delay</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Weather Delay</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Weather Delay]</local-name>
            <parent-name>[Flying High Flights 2015.csv+]</parent-name>
            <remote-alias>Weather Delay</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[Flying High Flights 2015.csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airport_Code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Airport_Code]</local-name>
            <parent-name>[Airports.csv]</parent-name>
            <remote-alias>Airport_Code</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Airport_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Airport_name]</local-name>
            <parent-name>[Airports.csv]</parent-name>
            <remote-alias>Airport_name</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Airports.csv]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Airports.csv]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Airports.csv]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Latitude]</local-name>
            <parent-name>[Airports.csv]</parent-name>
            <remote-alias>Latitude</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Longitude]</local-name>
            <parent-name>[Airports.csv]</parent-name>
            <remote-alias>Longitude</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Airports.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Rs&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Airport Code' datatype='string' name='[Airport_Code]' role='dimension' type='nominal' />
      <column caption='Airport name' datatype='string' name='[Airport_name]' role='dimension' type='nominal' />
      <column caption='Route Connection' datatype='string' name='[Calculation_32932615254048771]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Origin Airport] + &quot;_&quot; + [Destination Airport]' />
      </column>
      <column caption='Route' datatype='string' name='[Calculation_32932615254237188]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Table Name] = &quot;Flying High Flights 2015.csv&quot; THEN &quot;1&quot;&#10;ELSE &quot;2&quot;&#10;END' />
      </column>
      <column caption='Route Location' datatype='string' name='[Calculation_32932615254790149]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Table Name] = &quot;Flying High Flights 2015.csv&quot; THEN [Origin Airport]&#10;ELSE [Destination Airport]&#10;END' />
      </column>
      <column caption='Total Delay' datatype='integer' name='[Calculation_32932615258116103]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Air System Delay] + [Airline Delay] + [Arrival Delay] + [Late Aircraft Delay] + [Security Delay] + [Weather Delay]' />
      </column>
      <column caption='Larget delay' datatype='integer' name='[Calculation_32932615258591240]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([Calculation_32932615258116103])' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Flight Number]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <drill-paths>
        <drill-path name='Country, State, City'>
          <field>[Country]</field>
          <field>[State]</field>
          <field>[City]</field>
        </drill-path>
      </drill-paths>
      <layout dim-ordering='alphabetic' dim-percentage='0.444628' measure-ordering='alphabetic' measure-percentage='0.555372' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Airline' />
        <field-sort-custom-order field='Airline Delay' />
        <field-sort-custom-order field='Air System Delay' />
        <field-sort-custom-order field='Arrival Delay' />
        <field-sort-custom-order field='Date' />
        <field-sort-custom-order field='Destination Airport' />
        <field-sort-custom-order field='Flight Number' />
        <field-sort-custom-order field='Late Aircraft Delay' />
        <field-sort-custom-order field='Origin Airport' />
        <field-sort-custom-order field='Calculation_32932615254048771' />
        <field-sort-custom-order field='Security Delay' />
        <field-sort-custom-order field='Weather Delay' />
        <field-sort-custom-order field='Table Name' />
        <field-sort-custom-order field='Calculation_32932615254237188' />
        <field-sort-custom-order field='Calculation_32932615254790149' />
      </field-sort-info>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Air System Problems at Destination'>
      <table>
        <view>
          <datasources>
            <datasource caption='Flying High Flights 2015+' name='federated.06vo0fg07f8zb418rfy960zh7zkj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.06vo0fg07f8zb418rfy960zh7zkj'>
            <column datatype='integer' name='[Air System Delay]' role='measure' type='quantitative' />
            <column caption='Destination City' datatype='string' name='[City (Airports.csv1)]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Destination Country' datatype='string' name='[Country (Airports.csv1)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Destination State' datatype='string' name='[State (Airports.csv1)]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City (Airports.csv1)]' derivation='None' name='[none:City (Airports.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Country (Airports.csv1)]' derivation='None' name='[none:Country (Airports.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[State (Airports.csv1)]' derivation='None' name='[none:State (Airports.csv1):nk]' pivot='key' type='nominal' />
            <column-instance column='[Air System Delay]' derivation='Sum' name='[sum:Air System Delay:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.06vo0fg07f8zb418rfy960zh7zkj].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.06vo0fg07f8zb418rfy960zh7zkj].[Longitude (generated)]' included-values='non-null' />
          <slices>
            <column>[federated.06vo0fg07f8zb418rfy960zh7zkj].[Latitude (generated)]</column>
            <column>[federated.06vo0fg07f8zb418rfy960zh7zkj].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.06vo0fg07f8zb418rfy960zh7zkj].[sum:Air System Delay:qk]' palette='red_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.06vo0fg07f8zb418rfy960zh7zkj].[none:City (Airports.csv1):nk]' value='false' />
            <format attr='break-on-special' field='[federated.06vo0fg07f8zb418rfy960zh7zkj].[none:City (Airports.csv1):nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.06vo0fg07f8zb418rfy960zh7zkj].[none:City (Airports.csv1):nk]' value='false' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.06vo0fg07f8zb418rfy960zh7zkj].[sum:Air System Delay:qk]' />
              <size column='[federated.06vo0fg07f8zb418rfy960zh7zkj].[sum:Air System Delay:qk]' />
              <lod column='[federated.06vo0fg07f8zb418rfy960zh7zkj].[none:Country (Airports.csv1):nk]' />
              <lod column='[federated.06vo0fg07f8zb418rfy960zh7zkj].[none:State (Airports.csv1):nk]' />
              <lod column='[federated.06vo0fg07f8zb418rfy960zh7zkj].[none:City (Airports.csv1):nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3513259887695312' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.06vo0fg07f8zb418rfy960zh7zkj].[Latitude (generated)]</rows>
        <cols>[federated.06vo0fg07f8zb418rfy960zh7zkj].[Longitude (generated)]</cols>
      </table>
    </worksheet>
    <worksheet name='Last Minute Graph'>
      <table>
        <view>
          <datasources>
            <datasource caption='Pivot' name='federated.1n3x2a71az2iuw118dnpz0r7l9o8' />
          </datasources>
          <datasource-dependencies datasource='federated.1n3x2a71az2iuw118dnpz0r7l9o8'>
            <column datatype='string' name='[Airline]' role='dimension' type='nominal' />
            <column datatype='string' name='[Destination Airport]' role='dimension' type='nominal' />
            <column datatype='string' name='[Origin Airport]' role='dimension' type='nominal' />
            <column caption='Delay Types' datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
            <column caption='Delay Values' datatype='integer' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Airline]' derivation='None' name='[none:Airline:nk]' pivot='key' type='nominal' />
            <column-instance column='[Destination Airport]' derivation='None' name='[none:Destination Airport:nk]' pivot='key' type='nominal' />
            <column-instance column='[Origin Airport]' derivation='None' name='[none:Origin Airport:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
            <column-instance column='[Pivot Field Values]' derivation='Sum' name='[sum:Pivot Field Values:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1n3x2a71az2iuw118dnpz0r7l9o8].[none:Destination Airport:nk]'>
            <groupfilter function='member' level='[none:Destination Airport:nk]' member='&quot;AUS&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1n3x2a71az2iuw118dnpz0r7l9o8].[none:Origin Airport:nk]'>
            <groupfilter function='member' level='[none:Origin Airport:nk]' member='&quot;JFK&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1n3x2a71az2iuw118dnpz0r7l9o8].[none:Origin Airport:nk]</column>
            <column>[federated.1n3x2a71az2iuw118dnpz0r7l9o8].[none:Destination Airport:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1n3x2a71az2iuw118dnpz0r7l9o8].[sum:Pivot Field Values:qk]' palette='red_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1n3x2a71az2iuw118dnpz0r7l9o8].[sum:Pivot Field Values:qk]' />
              <text column='[federated.1n3x2a71az2iuw118dnpz0r7l9o8].[sum:Pivot Field Values:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1n3x2a71az2iuw118dnpz0r7l9o8].[none:Origin Airport:nk] / [federated.1n3x2a71az2iuw118dnpz0r7l9o8].[none:Destination Airport:nk])</rows>
        <cols>([federated.1n3x2a71az2iuw118dnpz0r7l9o8].[none:Airline:nk] / [federated.1n3x2a71az2iuw118dnpz0r7l9o8].[none:Pivot Field Names:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 5'>
      <table>
        <view>
          <datasources>
            <datasource caption='Union' name='federated.03svila12tnhv514t5wm1002i958' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.03svila12tnhv514t5wm1002i958'>
            <column datatype='integer' name='[Air System Delay]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Airline Delay]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Arrival Delay]' role='measure' type='quantitative' />
            <column caption='Route Connection' datatype='string' name='[Calculation_32932615254048771]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Origin Airport] + &quot;_&quot; + [Destination Airport]' />
            </column>
            <column caption='Route' datatype='string' name='[Calculation_32932615254237188]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Table Name] = &quot;Flying High Flights 2015.csv&quot; THEN &quot;1&quot;&#10;ELSE &quot;2&quot;&#10;END' />
            </column>
            <column caption='Total Delay' datatype='integer' name='[Calculation_32932615258116103]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Air System Delay] + [Airline Delay] + [Arrival Delay] + [Late Aircraft Delay] + [Security Delay] + [Weather Delay]' />
            </column>
            <column datatype='string' name='[Destination Airport]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Late Aircraft Delay]' role='measure' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[Longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='string' name='[Origin Airport]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Security Delay]' role='measure' type='quantitative' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Weather Delay]' role='measure' type='quantitative' />
            <column-instance column='[Latitude]' derivation='Avg' name='[avg:Latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Longitude]' derivation='Avg' name='[avg:Longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_32932615254048771]' derivation='None' name='[none:Calculation_32932615254048771:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_32932615254237188]' derivation='None' name='[none:Calculation_32932615254237188:nk]' pivot='key' type='nominal' />
            <column-instance column='[Destination Airport]' derivation='None' name='[none:Destination Airport:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_32932615258116103]' derivation='Sum' name='[sum:Calculation_32932615258116103:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03svila12tnhv514t5wm1002i958].[none:Destination Airport:nk]'>
            <groupfilter function='member' level='[none:Destination Airport:nk]' member='&quot;BOS&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.03svila12tnhv514t5wm1002i958].[none:Destination Airport:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.03svila12tnhv514t5wm1002i958].[sum:Calculation_32932615258116103:qk]' palette='red_blue_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.03svila12tnhv514t5wm1002i958].[sum:Calculation_32932615258116103:qk]' />
              <lod column='[federated.03svila12tnhv514t5wm1002i958].[none:Calculation_32932615254048771:nk]' />
              <path column='[federated.03svila12tnhv514t5wm1002i958].[none:Calculation_32932615254237188:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.03svila12tnhv514t5wm1002i958].[avg:Latitude:qk]</rows>
        <cols>[federated.03svila12tnhv514t5wm1002i958].[avg:Longitude:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Time Series Analysis of Delays (Scatter Plot)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Pivot' name='federated.1n3x2a71az2iuw118dnpz0r7l9o8' />
          </datasources>
          <datasource-dependencies datasource='federated.1n3x2a71az2iuw118dnpz0r7l9o8'>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Delay Types' datatype='string' name='[Pivot Field Names]' role='dimension' type='nominal' />
            <column caption='Delay Values' datatype='integer' name='[Pivot Field Values]' role='measure' type='quantitative' />
            <column-instance column='[Pivot Field Values]' derivation='Avg' name='[avg:Pivot Field Values:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Pivot Field Names]' derivation='None' name='[none:Pivot Field Names:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Day-Trunc' name='[tdy:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1n3x2a71az2iuw118dnpz0r7l9o8].[none:Pivot Field Names:nk]' />
              <size column='[federated.1n3x2a71az2iuw118dnpz0r7l9o8].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='4.3685784339904785' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1n3x2a71az2iuw118dnpz0r7l9o8].[avg:Pivot Field Values:qk]</rows>
        <cols>[federated.1n3x2a71az2iuw118dnpz0r7l9o8].[tdy:Date:ok]</cols>
      </table>
    </worksheet>
    <worksheet name='Weather Delay Heatmap'>
      <table>
        <view>
          <datasources>
            <datasource caption='Flying High Flights 2015+' name='federated.06vo0fg07f8zb418rfy960zh7zkj' />
          </datasources>
          <datasource-dependencies datasource='federated.06vo0fg07f8zb418rfy960zh7zkj'>
            <column aggregation='Sum' caption='Col Index' datatype='integer' name='[Calculation_32932615240630272]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='Case MONTH([Date])&#10;WHEN 1 THEN 1&#10;WHEN 2 THEN 2&#10;WHEN 3 THEN 3&#10;WHEN 4 THEN 1&#10;WHEN 5 THEN 2&#10;WHEN 6 THEN 3&#10;WHEN 7 THEN 1&#10;WHEN 8 THEN 2&#10;WHEN 9 THEN 3&#10;WHEN 10 THEN 1&#10;WHEN 11 THEN 2&#10;WHEN 12 THEN 3&#10;END' />
            </column>
            <column aggregation='Sum' caption='Row Index' datatype='integer' name='[Calculation_32932615241969665]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATEPART(&apos;week&apos;, [Date]) - {FIXED DATEPART(&apos;month&apos;, [Date]): min(DATEPART(&apos;week&apos;, [Date]))}' />
            </column>
            <column datatype='date' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Weather Delay]' role='measure' type='quantitative' />
            <column-instance column='[Date]' derivation='Day' name='[dy:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_32932615240630272]' derivation='None' name='[none:Calculation_32932615240630272:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_32932615241969665]' derivation='None' name='[none:Calculation_32932615241969665:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Date]' derivation='Quarter' name='[qr:Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Weather Delay]' derivation='Sum' name='[sum:Weather Delay:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Weekday' name='[wd:Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.06vo0fg07f8zb418rfy960zh7zkj].[wd:Date:ok]' value='67' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.06vo0fg07f8zb418rfy960zh7zkj].[none:Calculation_32932615241969665:ok]' value='false' />
            <format attr='display' field='[federated.06vo0fg07f8zb418rfy960zh7zkj].[qr:Date:ok]' value='false' />
            <format attr='display' field='[federated.06vo0fg07f8zb418rfy960zh7zkj].[none:Calculation_32932615240630272:ok]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <encodings>
              <color column='[federated.06vo0fg07f8zb418rfy960zh7zkj].[sum:Weather Delay:qk]' />
              <text column='[federated.06vo0fg07f8zb418rfy960zh7zkj].[dy:Date:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.06vo0fg07f8zb418rfy960zh7zkj].[qr:Date:ok] / [federated.06vo0fg07f8zb418rfy960zh7zkj].[none:Calculation_32932615241969665:ok])</rows>
        <cols>([federated.06vo0fg07f8zb418rfy960zh7zkj].[none:Calculation_32932615240630272:ok] / [federated.06vo0fg07f8zb418rfy960zh7zkj].[wd:Date:ok])</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows source-height='72'>
    <window class='worksheet' name='Air System Problems at Destination'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06vo0fg07f8zb418rfy960zh7zkj].[sum:Air System Delay:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.06vo0fg07f8zb418rfy960zh7zkj].[sum:Air System Delay:qk]' type='size' />
          </strip>
        </edge>
      </cards>
    </window>
    <window class='worksheet' name='Weather Delay Heatmap'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.06vo0fg07f8zb418rfy960zh7zkj].[sum:Weather Delay:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.06vo0fg07f8zb418rfy960zh7zkj].[none:Calculation_32932615240630272:ok]</field>
            <field>[federated.06vo0fg07f8zb418rfy960zh7zkj].[none:Calculation_32932615241969665:ok]</field>
            <field>[federated.06vo0fg07f8zb418rfy960zh7zkj].[wd:Date:ok]</field>
            <field>[federated.06vo0fg07f8zb418rfy960zh7zkj].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Time Series Analysis of Delays (Scatter Plot)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[federated.1n3x2a71az2iuw118dnpz0r7l9o8].[none:Pivot Field Names:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1n3x2a71az2iuw118dnpz0r7l9o8].[sum:Number of Records:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.06vo0fg07f8zb418rfy960zh7zkj].[none:Date:qk]</field>
            <field>[federated.06vo0fg07f8zb418rfy960zh7zkj].[yr:Date:ok]</field>
            <field>[federated.1n3x2a71az2iuw118dnpz0r7l9o8].[none:Pivot Field Names:nk]</field>
            <field>[federated.1n3x2a71az2iuw118dnpz0r7l9o8].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' name='Last Minute Graph'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='dropdown' param='[federated.1n3x2a71az2iuw118dnpz0r7l9o8].[none:Origin Airport:nk]' type='filter' />
            <card mode='dropdown' param='[federated.1n3x2a71az2iuw118dnpz0r7l9o8].[none:Destination Airport:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1n3x2a71az2iuw118dnpz0r7l9o8].[sum:Pivot Field Values:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1n3x2a71az2iuw118dnpz0r7l9o8].[none:Airline:nk]</field>
            <field>[federated.1n3x2a71az2iuw118dnpz0r7l9o8].[none:Destination Airport:nk]</field>
            <field>[federated.1n3x2a71az2iuw118dnpz0r7l9o8].[none:Origin Airport:nk]</field>
            <field>[federated.1n3x2a71az2iuw118dnpz0r7l9o8].[none:Pivot Field Names:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='dropdown' param='[federated.03svila12tnhv514t5wm1002i958].[none:Destination Airport:nk]' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.03svila12tnhv514t5wm1002i958].[sum:Calculation_32932615258116103:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03svila12tnhv514t5wm1002i958].[none:Calculation_32932615254048771:nk]</field>
            <field>[federated.03svila12tnhv514t5wm1002i958].[none:Calculation_32932615254237188:nk]</field>
            <field>[federated.03svila12tnhv514t5wm1002i958].[none:Destination Airport:nk]</field>
            <field>[federated.03svila12tnhv514t5wm1002i958].[sum:Calculation_32932615258116103:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Air System Problems at Destination' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Last Minute Graph' width='192'>
      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
      jEaMfTh9pIplmpTL5Xuuaw4n2JOAiedRK+cxbYe5Spa4FjHxI4Zjl0RSp5RO7DmH0cTDGPtE
      QUBC1wnCkHQyjusG6Hri7gAely8DeFz2DEA8kQzDuG8A/1/kKZBQmgQglCYBCKVJAEJpEoBQ
      mgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJ
      AEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQg
      lCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJp
      EoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYB
      CKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQmgQglCYBCKVJAEJpEoBQ
      mgQglCYBCKX9L7aXmUiNWD3VAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sheet 5' width='192'>
      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
      cYV7J8ceAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Time Series Analysis of Delays (Scatter Plot)' width='192'>
      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
      TaLFAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Weather Delay Heatmap' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9R3ReZ3rn+bvpyx9yJgCCOYmkRFFZpZJUVpXL1Q7tnmO7jxdzevr0ptez
      mGUtZhaz8GbsHo993O2yu6rsckVlUaLEJCYwASCInDO+nMNN7yw+BkgmcO9llVSyiP+OPO+D
      N3z3ed8nP5IQQrCNbTymkH/bC9jGNn6b2GaAbTzW2GaAbTzWUH/bC9jGVwc3L59meHaN4ydf
      pqcphC8YJTY1wo4Dh8jmK7S1Nv22l/gbh7StBG/jHj5+5+ecfON7vP/OO5BNkqgG2Bk1qNgy
      47PL/Jf//f+gPaz9tpf5G8W2CLSNDTD42U9+QmNjA2uJEpJi0dbejkChrbMbn/z1+1y2X4Bt
      PBSWZSHLCkIIJAlsW6AoXz8GuL+jSqXy21zHY4F/S2esKAqSBLIsIUnSv4mP/1HOd5sBvkRs
      n/EXi0c5X+X73//+9+8RZxNr3BmfJlLfiF9TsW0bw9ARSNiWye07d+hob79PXM3F6L8zR3NI
      YnhikeaGCEKSsEwT07KRhGB+YopIczOKVKMRVpUbVy+znCzR1tqMJAS2bWGYFggb07RRFOX+
      HOn4CiUDhoZGUC0dKRhGWDayBDPjd5ACDUiWiawqSJIECJZmJrkxMEIuUyLaGEGRZCRJwrZt
      LMuq7cu0UNUH8+jlAtevXUfxhwj4NJLpJIFAkMTCKAkjSECxkaTabWgLgSxJDN3sJ5Yq0NRY
      h2XZrK2vEQwEkSQZIWwsy0aI2i1674wnR2+znszT0tIIAmzLQtcNFEUmFV8lW7CJRgL31/Xp
      +XN07ujhxqXLtHR1YRomkgS6rqMoCoVMingqT11d5D5Ncm2Zq9du4QtFiYSDCCHQq1UkWcao
      VpFkBVmS7o+fmZ5FGAUW4kUKmSShUBAhyViWQTE2g+SLYAvuvwLlXJqLF/vRhUUqViBaH+Ku
      nIQtBJZlYRg6sqze/U0ABCMDt4hnCjQ2NlCtFMmXDBRJcGd0lIb6epAkhAAhbGRZZnLsDnML
      a7S0tmDoBpVcgoKl4lNlsAVC2JiWfX9dlUqFpfkZZhZWaG5tQ0YgbJuqrt/de4XRsQna29ru
      7/0zZlDbtLBMi5W5eeSdXSxNTRPP5wlHI5QyWQomPLlhvFnOMbu8TrPPxK5WuHTlJoGATLlQ
      RQ348UsmpZLOjv374e45SIqfvTtaKTbuZXpyHBCkYqtkyzZBn0xTey/HDu+7P0fA52NgaJCs
      CatJmdnZaeIFi562KPFUmli+jGKbtHQdZHdPEyDR3ddHpiCjiQLDQ0PYlsy+gwdYmrzD7GqB
      riY/VqCeF585fn8ey9Cp6AaykebtDwfZ1dVBcnWZZGyVQLuPwU+H6O7tJtzYhqwE2Lezg4pe
      JRLxMT1+h7H5OFG/QD6wi6zdhJ1ZZmZ5mRdffo2muuD9eSp6lVCombHxSTQhky0nKeVNItEA
      elWno+fQZ26oainJ5MwcyUSWW7duYRXyEKxD6CVC4QhVo0JTa89naJo7dtC6niMg8sRTEoml
      Zabm52lqrCOVzfHiS6/S2viAYWSjwMSiiaZI5PUqY6MjhBtaoVqgu8FiemKNSCDK88/Vfv1g
      XSPtzW3s6evkow+ukkyvUBdtQcFgaWWR9vZO5ubmefG1N2iK+u/Pk8/naa5v4eL507R19SKq
      MulCmnLVoJS9jCEHCAZDKMBTTx3Hquoga+QSq1y8eIWOjhbkxj6ichkQZGNLNO88wt6dOx58
      w1UdJIWp0QlaIhqFaoGFWIG6cICqYVM1rc+c1WcEO9XvJ6RZxJNJpqamqBg2XTv3ENTAFjIS
      EF9bJx5P3v2aoa+9ntlEhYAMqDJCsmlt7aK5LoqFQJJlUvEY2WSSsmFznxDIZZMsrsQwqgbh
      cJSO9jYWFxaJx5MkknGEgEBdA+uxGMd6W4kXLQy9QjQSxjBtVEVGyAEOHdxHMZMmnU6SShdq
      M0iA5OfwoQPIls7czCTFqsUTTxyju6eT9dVlYmvrpBJJLFsAEp07dtIQ8XPwyFP4ZajqJpqq
      sLK0gKbK1O3Yzcj163TvqN0gTY0txJYWWVpbw7ZMmhubkBWFlYVZUtkcfXsPE7DLZApFMvni
      XZpm4kuLZLMZ5haX0AJ17O7ZgV7V8fsU9FKRbKFAPJUBINq8g7k7A+zY2Yst2aiahCQHOLCr
      j1K1gt/nxzIqJJMZ4vHU/d+y9hjazExNUapUqFqCusZmWuoCLC4tkkgmSCZrc7S0tZFIZKCY
      INzYiWHoRKMBLCGDEHTu2E0k4COeTBBfW0fc+wkFdPfsoi4UJJtaYzWWpLWtm/37+oiGYHFh
      gUQiQzpb23u4rpHeHR00tXWzs7MFvVpFVjVMs0QskcOwQNWz+CI1f0MoGqGaXWdsZh6fKuGv
      a0CSJLKZBEurcaLNXezqbCSZyt7feyAawcjGyBTyTM0uYAvYtW8/plFF1TRsyyQRT94ff98K
      lMlkiEbCVHSDgN9PuVwmEAggybVDMPQqyCqqLIEkoaoqwrax7z5ZkiShV8soWgDl7pNvmQam
      JfBptadQUmpPr7AthFR7kmxkNEVCNywUWUIg3RdNFEVFksAwDFRVwbQEkrCoGhZ+TaGqW/j9
      PhRFwrIeMJeqyFh27d+yLGNbFpVKBZ8/cPffBrop8GsKSNJ9kasm2oAtACEAm3JZx+/T0A0D
      2TYYm1vjqaMHAaiUSyCrYJsISUFTJCwBpq6j+f0osoKEjZBkEJDP5wj4/SArSMLGEuD3abVv
      SQjK5QqBYADpriigqspdkU0gyxJCWFSqJsGA/+4YQalUJhh8IDKpau1RtywLWYJiqUwgEMTQ
      KyiqD92oEggE7+6vdtZCCEzLQkIgKyp6pYykaAjLRJZlFFUDBKImn6BoGrZl1c6ydli170NS
      0DQVWZIolkoEAgHgnhJd+40URblrYZKwbahWyiiaD8uoovr8DN+6xRMnn8EnSxjVKoYQ+BSF
      qm4QCPipVHVUGWxkfHfnsu6uoVAoEA4FMSyBT5Xv0gTun1WlUkHz+ZCRQKqd1X0GiMfjaNq/
      fSeHAMqG8YXPYwtRYxQPKJVKaIGg88C7ELbA1E1Pc/gDKopHe70qS86DNqB2P3jbvOJxDrgv
      NbtGJldA0gLOA+/9fWmDDqBpGg0NDR6n/OrBEjanp0Y90QgBtvOwzyBZNChUvVHp+TITRfcf
      dKVYYfrqtKc5vvmtQ7S21bkeLwF7W9x/NAC5qkXV9MYA3fWaJyaQJT6jqLvB5ZE1PpjOuB7v
      V+VtT/A2Hm88tgxQiK3w5g9+7olm9PIFzvzLLyiUXd7idpXhj08xcOZT13OYpRy3f/bzu7K1
      G0i8fHQP//7Zvbi9YM1KlqFT7zHWP+h6XUY5x3s/dH9epbU5Lr79PrHVhGua2YHrnP3Ve1Rc
      PqzCMrh19iw//ft/cS2SKYrCnz29h6hWO6zHlgFCze2EVW/P+K4jh9HLxft2fUfIfupb6ogv
      L7ueQwlECEYCd5VUNxCMLydryq9LEtUfxa+ZZJJp1+vqf/c9JLnmS3GDYj5HKZdDr+qu5xi+
      dIF8JkUxX3U1XlI0njh5lMaGprtmL2dYlsVivkrgru/gsWWAYjrO8uwMsbWka5oPf/hDmvv2
      Irv80oRepFQGBct58F1YlTy55Xmya2vuCCSZP335MIvxtNvvH6OQRASbsco51+uqa2kls7JI
      ueLOwKAFQnR2t7I0NuN6juaunUR9Folk2TXN4IUrHHv1BdcKs6qo7G6K0tcYBj5nBv26KMG/
      cKEEW6aBXtFR/X5UVXWlBOuVMpYl8AeDpMumoxIshKBayCNrAXwBnyslWNgWZrWKrGgYhuVK
      CQ74VGSgpJuulGBhW1QKBbRgGE1TXSvBlmmiqKorJdi2TMqFIsFoFFmWXSnBtmmQzxWpa2pA
      cakEm4aBotVMyZcH3SnBwbtRDkiPcUKMomoEIzWzr1tpw+fBhAkgSRKBqHuLDIAkK2jBEACG
      4e7lqHg0lUqyQrCu3hMNgKK6/1xkRSVc720OWdWob/J2CauPYLovG7Xz8qvyAwaoWharhaKn
      P+Q1kFogqJreTIeaIuNX3UtqthDE8u7lTgBVkQj5FOeBGyBLEj7Fm5lOVmXCHubRLI3mlojz
      wA2IBDSCHs5LknCtPN9flyxhezsuwNv3YtoC4VqoqyHsV+lqcG/S9anyAxFocH6BM3H38jBA
      1fC2RN2yWUi7l+8AOqI++prd37yWLfj50LqnOdojPk72ert5on6ZoOZNhRJFg6QH944QAsOj
      g6Krzud5XT7VGwcYlu3ZCahIbAiMc0au4ixifh47VAkr6O1FeGyV4G1sAx6BAarZdSYG3Hta
      zWKW2598RGzZpVUDQWJsgMXBAddPplnKcOvjjxm8dNP1uhrCIV7b2U5rwL1cuzDYz+D5Tx1v
      PyEsBk5/Qi5fYejsx4wOuT+vSjbOzY9OsboYczVeCJvJS2cZv+l8Xma1zKfvfYKpV7j87jvM
      ziw5/XXuXLlJsaQz+PEnJFLOr3c5m+by6UsUk2t8+u77LM47v8br0xMM35pk4c4A59/6gIrj
      syeY+PQcyVQZo5DizjUP/oxSjovvvsfUxALgmQFsBs9foRhzOrgHKCSWiS3FUH1+58GAsHTm
      Lp9FL9VCXt1ACdaz90AvlocXs6O+jr7GCN1hn2ua2aFRqmuzxBOlrQcKMLNxkoszlO1GkjPu
      wxmKsUVWp6dYmJhzNV7oJVbn11kcGNgQELj5ulILS2TnRwh3HmFh0PnDycxNkC/oyOUUq+vO
      OqIkycRn5/CF6+lojbCyuOpI4wsEWR4bp66lheWxUReij0Ctpomt5xk6f5Hc2orjHPdQzcWZ
      Hh5l8vYk4JEBjHwavVRmcXzSdeyMv76VE2+8ytj5i+4IJIlI+27sfArTpRVEAkZv3OHQs8cd
      x95Dk1/lwnyCuqA7xgR44hsvkEuXCDgxjSQRjAQxLagUsuiGO8cOQDGd5sArv4ORibsaL/tC
      7D1+CMuWkBy0WVnT8PkVLGQKqRiG41MGWsCPXtUJRUPolYrjlaQFg8jYxKaHmVoxeOqZI457
      CEQjmHoFy1Y4cryX2KqDf0JIBCJhKpkkxVyOxdFxbJfiQjmTYN+LryLu+kA8mUG1aDMv/+mf
      UUilXHOO5g+wMjHN8W9/y9V4SfbR89RxCkUT1ed2eYIDL79M0KfcDY11xvWldY62ROlfTVPn
      UnEyTYsDr3+H+pDDumwduaEDRfWxZ28zasNRV38fYMfxF5keGOD4G6+5prEsi6e++11HO7te
      LtB9aC9VpZmWhlVan37V4S8LWnbvxijEqQRaCMsFx7UU0gl2Ht2PLkXY0SFIJbN0dLVsSZNc
      W6XnQB/5VAq7ro8De5soVrcy7ZqUtSbqfBJP/tmfU0ylXAfONe89QSx9jb3fqZ3vthWIbSvQ
      42wF+sxV5t2u7zEu/FEKsHi0UUveSTz9ML8uvBzBo8TdCyEegcbT8PvzeMLdpJQvcg6Btzkk
      Sfr1PMFLmbKzHLkBIZ/M9440e5qjatreYs8Vif/07A7ncRugyhDye3SE4T1ePVUyPHFAoWpx
      birlPHAD2iI+Apr7vcgSnOz15q2uwdveTY9PxniswGTcwdjwOfyHvY33g9zcQGLbD7CNxxyu
      GEAIwerMLABrM7OunhlbL5FZjVHJxFi4fv1+ju5WyKwuk8tVmBm4zsTwpKvLcmV6FtsWVHJJ
      EjHnQCjb1FmeXUTPpxm88CnpjLNiV8okia1nKKbWuXH+Cm4epLW5eUqFAgMXLzF0447jeLNS
      JLYUoxBbYfTSJSq6swWsMRQkqkk0R0Ica3V3i6cX5jHLWZZu9pOYW3Acn1yLYxgWszevsbbk
      rFsJ22JlZh6zXGD4wgVX+0gtzjB+Y4hiep3RG25s+oLsxBC5lTX0bIJK3vmlsPQKK3MrlNNx
      hj69SL5QqyHkigFKiTVuvH+Gai5N/5sfuErWyC4tsnDlMqZuIpfXSK7nHShsJs+eYmwiRrip
      mTuXLmNaW89TzWe4+Iv3MHSDa+/+gtlR59Db1NISV98/y8LANfIiSCjkFDsimLt5naH+EU7/
      5KfIquYoNNuWQf+v3mQ9ZXHwySeYu+PsCIvPzTFy/iJTN64hhxrQXMTzHOzp4HBDkG/v6XJl
      /TIKWSY/Oo2khWne0UZ6yclGLxg79Q6Z+Cp3bgwzdM7ZlJ1fX6H/vU8Yu3CG+vZWbn3inAxk
      o5Cdu8Pl9z4lpK8xv+TwrdgGSqSJ5NBVcnf6Sc8451skFha48dE5Zm5cQ1ciBAI1ZdkVA4Rb
      O2lubcBf10h7b4cbEhp3H0DTJMrxJaq+Dlo7nG4omb3HDyEJwLaRFAnh4NjxRxvYsauL/NIE
      sViJtdl5x1ejpW839XUB2g4cpZksNy8NOVBI7Dp6BFWuJWAYyVmWV7Z+NWRFY9+xAwhg9uol
      jv7OGw5zQMf+Q/hU2Hn8BNXZW8zNO79m4/FcrRqHYbC7tQEn448Wqaehqx2QiY2N0X3iya0J
      kGjs6sCuFAlEG3ET+1fX2UNTcx27Tz7Dwu0hqrozY66O36Fx/wkaG3wEQ0Fn/48kkxi4QscL
      r1O3e5+rXJj2vfsJhzR2PHEcf26B4YGaROOKAQrxZdSwj4XROygBjZVZ56czNTOCEgpQqRgo
      oky54OAMEgbzqwWMzAJr8wt07tmL6nALVvIpJJ9Kzgzxx//1v/DcGy85qmaxuUm0iJ+1xWXS
      BZ0Dx/Y7rMtmfnoeYRU5+vzzlKmnoz28JYltlknkddIr8/i7dtHX6SyerE4Mo4b9pFdX0UPt
      dHc70UjsCimoPj+3EzlS+SJOgbZGIYXsV0kvzhPtO0Aw5OAEFDZSwE8mU6Glyc+Owwcd95FZ
      XUAL+1hbiuELRnj69RccabRggEomQefevcytG/T1bW2SFmYVX2MLpdVF8vEkdjnpKJavTo2i
      hX3EllYpWD72HOwGPucH+CTmzQ8wnSh5tgK9ssebvd2zFQjweyzk+qVZgRIlYsI9Tb5ibluB
      POA/7G0kUO+hLAob/ACSBF4LAAc1GdXDxgIe4tTv4VEs9F7j2+/V+/RI9Qh2au+2bS+5EFCr
      8eNl/7IkoXsJogKke2XhPEC3vPonJM97rznbvMyw4QUYX1nijoccUajd6F5uQfEIxaQqhr2h
      pKI7tEa8eQN106age5vDsoXnWkJWXifmgUgIcLAD/CsUqqbrcJDaHIKy5yQlyXPxrcV0ydNv
      31nnp8vDbQ5wKKKiRNwHN5YNa9sPsI3HG/fLoyfzOeLmwxVVy9AZuTFMQ0OQ62cv4Is2Ew4H
      0BRp0zCCYirO7EwMUUpy69owXbt6kaUtHk5hc+fyRdYTRUrxJRZX0rR1tGLZYlP50SgXGDh3
      HnwRYjNTBOtb0LSt0w5Ty/Ncu3CdUNTPjfNXiLZ14PNp6JtdtUIwd/sWczOrVDKrTI/N0d5b
      U6A224uwDW6fPUfJVIgGbGan12hqbUToFsVNiOIzY8zemUSVTSauD9LU03u3Vurm5zV7/TKZ
      bIncwgSJWJbG9lYMS2xqpTUreaavXELy1yMqSXJZoxa1utnVLASx0QHKFUhNDlIsGkSbm1Bk
      adOXv5KOMd1/jWBjAwvXLqFEGwkEA+QqxqZ7yc2Pk5iZxyqlSY6PojV10Rj1E90sV0PYTPdf
      JJfXyS5PkYrnaWhrptWvIG/y28fmp7l1eYBQROPGhX6aurqQFcXdC1DNZxm5covk3BjrK6vc
      7nd27BSyRUYvX+PG+SuEqwlGppwKJNm09uxk8tpl5qbWyS1MUXVwoggh6OztYOLWIAs3b5DO
      OAfaKf4QITvDwmqR1kYf05OLjjR1bR3EJkfw1zexOjpMwalyk7Bp6+1hZnCAqx+eITYz4ThH
      oL4JPTZL2fKjVWIkHUuD2DTs6GV5eJBwSwuLtwedE3VsaOpqZ3l4kMkLp0k6xuoL/KEga6M3
      WR6ZxB92kZ8sq0TCMPirfyGTKbqKM9LqGtHjcwQ69mEV86h+hwgdYdG4o5eloX5mBwaZun7D
      cQ5fOIqSX2Y9C/W+KvMLte/RFQOEmlppaAxRzhfofeIYdjHrSNO+qw+fKnj6my8wO7mAP+Ak
      m9lcPnWGV//4DxHY98tWbAW9kGJ4YJaXfvdbdOzscrMVlseHsZr30aZlWc5pnHj6gAOF4PaF
      Cxz91rcJBgI0tUUp5bf+OIVtcPN8PydfPkE6kWV+bNpRX5i72U/b8W9QWR1H3XGUjraQA4XN
      yLlzPPm7v4cWiKD5ZIQDBxjFFPNji+zc20mpaJJcnHeYAzIry+x/+RX2vfY7zF684Di+sDpL
      To/Qs38XHfv3s3j9uiNNYvgGDUdexCeyiFCrCyegzZ1zF3jyjW8RqG8h4CKrb3boFqG9zxAo
      zJNX2zl8oBYv5koEyq4vkcvlibT1kFtd5sALzxOJBLcUgebuDFKxav0BtKYujh3bvaXtQJg6
      uVyOXN5gR2cUpb6dzq62LUUgvVyikM1hWga5bAHbFrR2tm4pApXyObLJJLI/jFUp4AvVEwoH
      NxWBBIJiJkUmVcAsZTHVevYc2novtl4il8ljyiFe+O7v0NXXTSga3VIEqhYy5FNp/KEwlVya
      UHMHPp+65XmV8jlK+RKV9Dqh9l5aOtsdRKASlUIOtb6LAy88R0NnF75gYNPzFcIiH19Hr9qU
      1hdpOXiMcEPdliKQXipQyWVo3H2I7PwMO546id9BBDKKGarZHGowQsPuPSiKQtSvbioCCbNK
      MZenXIH6ej/hjl6a2lu3FIHKuSzZRAItVIdezBKob8EX8G1bgWDbCrRtBdrGNh5T3H9jZEki
      4DEzKFsxcVkrFag1SWgIePO4BlTvt43XF0O3bEoeaYKaRMBjYawTvV20NnnLh/CaRCS8kzxC
      Rozk2UPpvtp1DbKE+yLEdzGyMk9Kcl8lL+JTNniC8Z4ZJYTHDCchvGdfeaxc5nVNNSKvBHeT
      KTzuxacohL8GXXi+qlCkzXXSzeDqarX0MtPDo5QKRRbGJ8iknUKboZhOsDA5i6GXmbsziuHo
      bhesz82yuhJjZWaa2ck5x1vDNg3mRsfI50ssTUyQzTrH9lcKOaZHJqgU88yMjGM6lhIRJBdn
      WVtcpZxNsjzvHHorbJP5kREy6TzFdJJyxVvtzm385lHKppkamaRcyDE9NnlfT3LFANl4jFJ6
      nVM//hnXr4/VGuc5IB1PMH/tAqd+/DOW51edX1nbJJstcu7Nd9F8Pq6eOuOoNFUKGfRKidM/
      +kcunv6U8++ec1xXJh4jMX6LH/7VD6nmEgzdHHekqVYq3Dz1IVfeP8Pa7SskMltHtgrboFws
      cOG9jxn45T8zMu4tyHAbv3mkYnGWb37Kj//7LyiszDIyVqtt5YoBVMlmcjrO6//Lv2NfXwuX
      3nf+0IqJdQI7DhBWdMJKmvExh2wiSWF28BbP/u53kKs5dj19EtVBxlZkiTvXh3nx299AC4RQ
      JGc53iwXyNLA7//J64zdGiabc7DpA5qqIGTQfBqt7S1US1sX35VkH1hVFE3j4Mlj3hPIt/Eb
      RyWXwmjs4zu/+zSjAyPk7jbhcMUAyXic1s4mVqZmScYT7H7Kuc5NuVpGtirsevJZUmno7m3c
      crxtlJBCEVIr62RLFsdPOhdUKmRS1Le3ks1ZNNRpdOzuc6TJZbNEQyq5nE5DWwcnnj28NYGw
      WZ9foGlHN+3dHSwlqnR0RrckscoZYrECHd1tzC1nKK7PPFJBjG385lAoFAiqNsWSoGXnHp48
      vhPYEA06tbrMpOEs229EtmJ6su0qEjSFvCmBpi082rW967S6aZP36AcIad7DdZ+ta6WrpdUT
      zTbc4+bCNAkPViDYrgqxjccc982gIVlhj+atGYOpbO52fxgkCc9NJRLliufGHRGP2V0+W+D3
      +G74BKgeE0mqpRKZjPs+tl8nrBSznpKOaslD3ubwm4Jdwa3TVTfCtMUGBvAH6PoK9ggrxuOs
      Zr0xwE6naMLPwRbCU2VpAFuVcJUlvgHBQOhr0YftUTBQSmAID80Cbe9hM4fD9fS1d7oeXzLM
      x1kEElimN3lRCBvLcv8jbuOLh7AtbK+31wZ8LRjANqu89xd/QSzm/qWITY/x8b/8lP4rI65p
      xq9d5s2//jvSDp0eN2Lkwml+/sO3XY9/nLE4PMg//j8/ck8gTPo/Os2P//ofHtnU/LVgAFn1
      s+/po57iTepaWymXDfYd3uWapr17B8VyEVm4u3GMQpL+a+NYueS2GdQFep44TnOd+2hOJIWg
      X2X30UM8WvmErwkDWEaRtcVl1mfdd2KZvnWDcGs7lYL70hvL07N09OxwzWhKoI7v/skfsWNX
      j+s5HmcsTYyQScdJpd295MKsMD05Ry2x8dGumK98o+zBeJyLy+5b4ADsbHTf9QXcK8H3nllJ
      kvCr3tukHgk00dH8ePoBzq5MYdhfsBIc8K4EP7aNsh8FX2YfgW18ObjPACVTJ5F1Slz/LB6l
      MJRXrk5Wip7yFISA/gXnnOWNsCzhmID/eRzoCLOj3ttLs14qkPPYYPrLYLlHyobz+DsOruQ9
      vQA+RfFc4S8aLpCW3HcH0i1rIwMYzFScw4k3wkuIAjxayx/DtD1VlLNswfVFbyEdhmFRLhue
      aKIBhbaoNwaIVYvotvuGeeC9yh14YxohBOsFb+bgqml7TtUcWs17Ko9YH9CoD3gLm4naNoZR
      cT3etMSXowQL2/7CIyJrrYE8ESBcWnM24su4kT3v5UuAEMKx6sRvYJYvpSXURnhkAMFHP/on
      Bq7ddk1RSq1x6ie/YGnRXaNsYVvcvnCOn/5//4DhMlnbyMf48J9+Qv/Zq67XlRm9xuLZ98jH
      nYvPPtXXyTe663l+Vyd/cKiXoMOpCdvg7f/2N6zFC5z7h//O+HTa9bry8SU+feddrjuWbX+A
      9NI0b/7Iva/BLBd57x9/zOTYrGuakfOnuXX+U8cK1PeQX1/k5nu/4sb5W67nWBNrQSkAACAA
      SURBVLl2lol3f0mp7E5UEmaFwXd+weAnH7tmgmouyfUP3uXsW58AXhlAGJSrOokVdz1sAZZH
      bpFKZVlZcMcAkqxw8KmjNHd0O5ZHvwfbMonPzZJYc6/DmNUqGDpZF6Xex2NZ/D4NTZa4lSrT
      5VR1QlLZd2gnlbLFkeN7yefdiz3RlnaM7Bp5l1lkwjK4dPpTfOiuY20su0KpVCEdd8+YM7eu
      kVhaouJSVIy29+BXNHYdP+R6jmoqRnZ5Cdult13YJnq5yurIpOs5/HXNtDY10HukFgbviQGE
      YdDQ0kp81bn79z009+wiGo2ST7jPihrrv8aRV55zLW5Y1SL1XX14CQEKd/aADZFu54Ja+1rq
      2dtcR51f49n2KInS1h+nsCpM3B5ldvQOY8PjzN0Zdm2lTi0v4mvuxi64K4suBPTu20smkXQf
      bGYYNLe3su7YIeYBWnr2INs6hsvm5VhlcqZCk5fSJoqPhq5W9JK7C0PWAjTv6KJph4emiLbJ
      0lqKvt3twMZ8gLVlZkxnJdg2TVAUZElyrQQbuo56Nxn8UZTgTet2boBlGsiKii3gnwdc9LIS
      AmGZyKrmSQlWZQnTFrxxuIUne+pd0dxD0LDQXXCpaZgoqoIkeSt1fg9uSCzTRFZUwJ0SLISN
      ZVioPu2RlOAbi1lnJVjY2JaNrKquleB7v7skSRyKqhguqsTdg2kJ734AWfXuOtB8Nff2F6kI
      K+rdw3I5hyRJSKr3Cg1eGz08ClTti3fPKHd/R7c/iSTJqL4v2GYiycheewI8wm+4EZ85aa8/
      7tha0VNzBZ8is7vFfdd3qOX9+j3cgraQ2NfiVFfzczS2cK1w30PIr5HzWO1hLl5ipuyeJqjJ
      PNm9dfrl5xFQZRQPz4YQeO4sH/I4HmB/a8iT2TzkUwh56HQDoNiCvAcR4zP5AEJ4T0BYyVY9
      FZQKad4ZQJJA81AYSwhBZ523knpCeC9z6NdkKh5bNy1nKwwn3dup6wMqB9q9JSmpsrcuKUJ4
      70KjyXhiMqiVOvRyv/oU7ymnVkF3baUCMB7FD2BbljdRRgiEl/JxXyJsy/rCozQfxQfyKHK/
      V9i2t99R2NZXzjcBtfO1f43vyxUD5NdX+B//99+Sjy1x/t33uXDqkiNNcnyQoXc+Ijk9zMjb
      PyWddoq6tDn/g79laHiN5NwYP/27nzjOUc1n+cH/9ZeU8nne/rsfMDnm3Cc4PTfJx//4U5JT
      Q9z44BS5rJPXWDB95j0GLwywNHSNT/72r8kVti6LImyDU3/1l6wtrXL6xz/m3K8+cFzX7tZG
      /mh/B091t/NHh/podRQzbC79w98wNh5n6J2fc/2ic15DJZfmf/yff0mlkOb8m+/y8ZsfO1AI
      PvrBj0gk01x+7xQf/sJ5H+mleX7wF38PwId//1eMTzibpmf7P+XMLz/hzpmPuPrhx5SrTh+0
      zcd/898Yn4pz4Zc/4/b1QUfmjI0P89EPf1XLHfl//5J8zkOj7EhbJ10djYSbWzHzaboP7nGk
      adp/DJUK0fZOcusrLm41iSeeOUqlVObih+cJqpajzOiL1NG3pxshDCRFYW3eOWq0YedeIiGV
      pdsD6KUMiaWYI033seNg6Ow4cpxoey9RpwrEksreYwcxDEEhvk4m5uIjiKfRJYWQJvH+Qppd
      DU5hFhKHTj5BpWKy58RxbGNrpoRaX+Wdu7tQ/BH8sknHnl5Hmtb2BizbR0ODj3TaOcaqYUcv
      bS0RFq6fo4JGOulM03v8BIpdQQ0GyC4tUHLUrSSOPPME5WyahfFppoZGcQqHbt1/hKBmM3n2
      fZRwhFKhVg/KFQPkYsusLy9w9f33yOg+JBephOmZUXKxVdbHJ2na2ets2xUmk6PTLE+Oc+yl
      l1AUxfGJrhZSrC7OMzM8TqS+nkrZWb5OL02TXlsi1NaDrPidxTMBq5NjJBZnWBu+Tvdzzr2I
      hVVhYWqGlfERoq1d1DU7m0v7murpiASRkfi9nY1MZxz2IkxmxmZYmxphfmyc1ZlJLIe9VPJJ
      1hYXuHPpHNNzKTSnnQhBKr7O3NANkhmThjpn40JqZYH15QVKSjN9vV1IkrPctDQ2THx5Eb1q
      oCgSlunga7ANpsamWV1YYsfuXa6sZvGZcZKriwS7DtHcVHdfbLrvB5hcXWZC9xZEdmYi5agE
      34vVkGWZkCbzssc+weCuCK1tWUiyAgjGYm4UTYFlWiiq+khKcNQvE3RhpRCWBbKMJElMzqW5
      4UIJlqVa1Gx9QOX3j7Z5XJeC5iFPwW0dJdu2kKTaPh5FCY4VDGclWAjsu9+KWyW4pmOBrMhY
      BZ24hz7MhmV/8fkA0iNU7H0UyErtY3SvqEn3beFfJCTFY/wz3kPGvwzIsvd9eIa0eeeZTUlk
      +dcKULz/BdhCUHbr5r6LhqBG0Of+7vRqowa8Z7pJEi1hbx92UbdYz3sLhw5rMl77fjcGNXZ4
      cB77NZmEg8L9eQRUP5pHpvP6AemWwPboNwl49B3YtqDicQ6/DH4PDKTK8gMGMG1B3lH7/iza
      67zFw6uyhM9jkoP9CG2Vej2mRK7mdCbjzh0mN6I5rHreS0ddAMLufRSGZbPoUIn682iNaIS2
      6JH2eUge+y8AFKs2VY8+kI6o5unyy5RN8hVvF3JYloh42LstvqR8gG1s46sKV7JCKbHO2Xc/
      5cXXjzF09RY9T73Erj1bR+BNXbvI2kKM5u4uVufmee4P/5j6rQrj2joX3jlFVQrR4texm/dz
      4umtza3F5CpXz/cTbWolH18n2LKDF159dkuauaGbjN2eon3PblLLS+w68TzB5qbNCYTNfP95
      ijmDfa+8xMgHH3H8D/9wyzlso8jFdz4i0NSFlV6mbud+Dj+1dbXrtTu3WIsbdHYFmR8cou+1
      P6KxcSuvuc3k+7+g/ti3yE5ewRBBDr76zS3nqBayvPU/3+Z7f/otLrx/ls4jT3LsyS3ClYXF
      wCenqar1FFYXiHT38dzLW59vfHqE8aEJ2vccYPzaIP/uP//ZluMBBs+fYXUlQ3t3G+tzizzz
      B3+MspXIZFe59t6HCH+UoGqSL0u88N3Xt5TlZm71Mzc2R9+TTzExMMHv/sfvAS7NoIHGFsI+
      yMbWUYONjF/ud6TpPXwEvVwguRLnhRcPMTPmkA8g+9h7eC9GtcKew/vIJ5zDgcNN7bQ0BFFC
      dfTsbMd2kXPafeAgmGXad+0ktThHwSkKVJJp27sfUy8xe+4UQlEcPY+yGqKnrxPLKpKIJym6
      KO3Yuv8J9NQq7fufQNZCNDc5mRwlOnZ1UcyUyC7OkZxfcNSXtFCEprogxWQMnTCjl286TKHQ
      0NaOnpgi2vsU1bhzHkhz3140dPz1TUSD7gLV9h17gmqpwO4njmBWSshOoqXsp2d/H4Zp0tTe
      xOq8c7PznoOHsKpFGnb0otkPxF1XDFDOJVmbn0OONCNVM7Ts7HOkOffPP6Z55z58ssH1iwM0
      dW6t/QmjwJs/epPevbtZnp1lYWrasX3R+sQtBoZXqPdV+ORUP509znHhn/7qZ1DfSW55hd5D
      e8k6OKmEsBh6+xc0dO8mUNdIObaEXtlaMTWK65x5/xLtHe307D/IypRzwkZ6eZbE0gLJmVGC
      O/Y4y8vCIrm4SHp+AjXcQCjsd26UXcqzMjdLzvTTELRo6d76vIRtMHG9n+6DR1m+c42C7uz/
      Gf3kXfIiiiYqrC/Msb7sHJr+1g/+Jx179nPmJ/9EZMcuNAffgdCznPn5KTp7uigUdNwEz174
      +U8Id+6imlpjdW6O1F0H3X0/wJ2lRfqzD69cbBk6lXIFVdOoFEtEm5qQZQlzi6DwaqmIZdn4
      /D5KhTLRxno0Raar/uFeVCFsSvkCyAoytZ4A4Whky0oSlmlQLpZRNbUWQ6/5CIYCW9br0Stl
      9KpR20upTLSxgVjR5NrCw30gQgiMchEhJHyhELZloqgau5oDdEQ32YttUSoUUVQNS6+gBMIE
      Aj70nM7aJo+UUSlhGhaa34+sqsiyjGHZJIqbMJsQVEtFQEaWLCyh4A+HeLo7QuMmoqZtmZQK
      JVRNpVIsEWlqQlXkTZVgIQTlQgFZ1bCqZZRghIBfI1e1NlWCzWqFarWW/2EZBqovgC/g21IJ
      rhQLmJZAUWQs0yIYiZDXbbKbKMHCtikXi0iygrAMkDWC4RBtsqDiezg36OUShmGiahqmYeAL
      hlBUxZ0OoGg+wlrtx/YH3UVz+kMPylTXNTlbZSRJJlxX96/+fytvsKJqROq9xYP7AkF8gdoe
      AiHnvUiShC/0ICLTTfy5JCsP9uJiDgAtEELzEsQqSfjDD9bl5hRkRSVSX1tXIOTs1ZUkiVD0
      bjh20N3iVH8A1X93rMtvJRB+WMTr5q+/JMsP1uUSvmAI393l3PuGbSE2tkn1nn0k4c1M/2WV
      lfJariWgKvTUua8rD9Ae8tPkIfsIIFUy8bsIDXgAiYJDP7LPYz2Wp6R5OGlJoqXtX188W8Gw
      vHXtgZqZ3Uv0qWkJF51FPwtbkbz1IBAbrECKDGEPNlSAvDA9hcjKsnebs1fGFMK7A6W3LsKf
      7HcODPt1cc4cJSi7P7BErsovp70VK7s+sYhdcO/TUFSZ//hfv+1pDk2RUD3+kLmy6anxdapk
      knZZHeIeGkMyhkffzLYfYBuPNVy94fnYEoPXbrP76DEWh4foffJpOru2DtJaGhlkZTFJW3cL
      sbkFdj33Gp1tW2Q3CYsbn5zFDjTip0jJ9PPsK88gbSE4VfIprp2/Snvfbtamxug5dpK+vq2r
      PKxOjjA1tsDBpw4zfOM2J15/nY6Qt6yrLwJzt2+xvJTm5BvfZPjCRZ765jccKCSe290JeoWy
      rBEUJv2LW1feCIRCfOPoThaWVmnpaCexGmMqtkW4srCZv3kFAvWUUnFMOcTRl7b2A+TWFpgc
      HKNz7y7WZmbpPnqSto4t/CzA7OANYrECbR11rK6keO7b39pyPEJn/Px5fE07kPU0hhplz7Gt
      O5euTY4wO7FI78FdLEzMceTlV6iLBty9AL5wAy11Gv3v/oqFxXWqVeenqbmnj2pigbqeg6Dr
      hF2UEew7uJ+FsRHGrt9g5NogTpHKqi9ET3cLw2c+oGjXc/2j845zRFuaScxOceGDS5x47ihj
      N0cdab4MtO3cRXl9nvH+q4wOTbqQlwXT8Sy7Whs51tGILYSjPmbqOnPxIk8dPcRL+9sJOoq8
      EuH6euJL6+w9fhij6Cxa+euaiAYsZm9eZ21ulqUpZxt9W98uCqtzDFwaQMuvMjXvlEOgEqoP
      szh0jXzWpriyiJM2Wt/ZjZRfY/z6LZbGxogncoBLESg+NcRaOcKxE09w8NnnmLl2zZFm4ONT
      9D7/LUJ2GivUStChHIgQJh/98hSv/cF3CDd30N4WxXCIC8/HFxm4s8Z3/9N/prNRoAacLRuW
      KXHkxB7SsTSpZBrpS4gIdYP+D95n7zfeoBxfxciuEYs7fQQy3zu8gw9GFzg7ucTu9iac4s0a
      Gps42Rvm41uzDE8vsnv31qXEBTbxxQWOvvISE5f62ffyi477iI3doqC209IU4cirr1FNOzvP
      rp/6gP2vvMErv/cq8dU00fqtrUfC1Il27kIWJka1hOEiGWjs0zM0PvESYQ2efvUZsus1R6vy
      /e9///sAyXyOmPHwwCsb0As5mvoOUF5fYv/zzxMM+resCCEjyKczBOsb6d6/B02t1RKKbtbB
      0bIAQb5o0tvTQqS9h46urWvpC8vGrJaxhEQhk+fkt17B71e3rG6RT6yRyNp864/fYHFmmWPP
      naA+4Kc74q3Gz6NgPpWgvIlEJ0uCbCrD4Zdf5cCTR2lubaSsW9yceXj1NkmWAIk6nwKqRiyd
      JVbUMZM5xCYOK1mW8Pl8GKUcZfzMzK6Qr5ocfWaTkBMhqBQLVHRB666d1N01oSry5mHLQoBe
      yNK8+xDZlWX2Pf8cPp9GSJM3DYuXscmlcyiyRKR7D7v62ikb9hZFB2zWxkdpP3yCpqYgka5d
      RBvqaNIkrE1CdCWgmE7Rc+QYyViOQyefQFXkB46w8ZUlbpdym0z4cOSr3qxAqizR6aUFDt4b
      Xz+KFagjFOH5ji/BCjQ1SsqjFejvTrvvegNQ+YpagZpDiicrULLo3Qq0NyS7Kjy2EfdH+xWV
      To/KYKPP9mR3VWSJRo+2c/BersVLrSKARr+3Ui2PikLVIuahM6VuCl7e477jCYAR0BAOoRob
      ISsyexu8vX6q4t1nFA0onkyOdapFS8Db79iqWBB0HwovsYEBGvwB+ho6PE24DW9YzFQZzLq/
      nTsjQf7i37/0Ba7o64VHafO17QfYxmONr4YJZBus37lONpaldc8uEotJ9r30zG97SY8Ftl+A
      rwgiLa2k56fxNXagp9yXLd/Gr4dtBviKwNAtmrqaycdTVLJpjKq3ILhtPBq2RaCvCDR/gOZD
      zxGMBvC98sqX0I9rG7DNAF8ZhNu6uBeQHWxo+a2u5XHCg7pAto2ubz+7XyR8Eo4N9jbCL7H9
      m3iAaZqez+u+JziZTBIIeKur/2Xg1lqScwvORW/vQULicIe3BhlVc/P0u83QGtaoC3jLn9gX
      qKe53ntpyMcRw4kkw3H3feUAXmhpZGfr1uEzn8eDhBhFIRz2lhX1ZUBoOdIevk0JQdVjUkTZ
      hoLH6qB1ioTlsYOJ5vN9Jc/4qwiRzVH0WCZR0byf79fCCmRbOgM//WcKOfdV1OIzY5z95a+Y
      nXb/uszdukz/m29R0d0zS3J2lLMfXXE9fhteIBj58G2mx5Yf+S98LRhAkjWaO5vRK+7re7b0
      7SGAgeThtWjq6GR9fs51/JNtVrhwfgCpkPjCO9E8rujZv4tC2lsQ50Z8LRhAWFWSi/Oklpdc
      04yeeY+kESQacR8Il4knaWlvoJh31+fLqlRoaW1iYXZ5mwG+CAib9fk51mamH7kD6dfCDCop
      Ggd//0/v9r11h/3f+A47Kzq+QAi38Zkdew7QvHMfIZcVJLRIAy//3nd4/g3j63HTfOUg033y
      VbpOPPpf+HowgKQQiHirE6P6Aqi+mtXLdNnp0heO4C2b4e5c2q/Xy3Ybm0CSNqkp5B73GcCw
      LVIVbyXCdctbrRdJkras2vYwVCzTE40k4SlHAWqlWvyqt3XJkrcaNAB5XUcuOjULfAAJ751Y
      JMl7/SWvc1i295L1XvMHdMvE46dC1TbJ6u7b0MIGP8Do8hIDhYeXRtwMy1lvfVlVWaK7wdsd
      WjYsSh6sLlBrLeQFqgyRzVI1N4HtMVMNoJiuEPOwFUVi0zKHm8Gn4CnzCryfV7Zieu6RHFS9
      dQqqmjbGFqU3H4YOBQi7/77Edn+AbTzu8MwAw2c/YeTWHdfjbaPMnU8+JL7q3I4UaoVlRy5d
      4MK7px2rQ2+cY+CjU8xNzLleV2Z5hkvvvU++4PRkChbvDDE1sczCnSEufnwep4tJCJtbH58l
      l68y9ul51uPuxZ5qPsXA6Q9ZmXMZEi1sRi+d49bFa57E0cT8OLPT7sOup25c5+rZi+gub36z
      WqD/3feJx5zL3N/D/PAAF958i4TbrjjCZuTiOQav3HK9d9vUufrBB8zO1Mq1eGMAUWV8aBRF
      cf8sx0b6WVlYxXBRWhtqhWUPPvMMZrHo+ik3y2nm7owwOzzuel2jV67TWB/i9jVnZlaxWJxc
      YG5sjo6gyfJqYWsCIagmVkllyqjlBIvL7u3Uii9IW2cT6wvO9XRqkKhramRmeMS1XG4bFQbO
      XSC54lyy5B5Ghm4jbAnFpWA+fekM64k0uu7ejd97+Bh2uUJ0k6rbn4ewDaYHBpm4MeR6jtTs
      EEOD01Tu9iL2xADCErz4B3/IpIu6QPcgqwH6nnyGlQGHZgwbsDB4g54Tz7ruGGjkEnQdfxHF
      dK/EH3/9NdIrq4SiDlYEAZGGeiyjim7o5HIFNKfKA5JEpCGCqRtEGusxdN21vlCMLzA9neKJ
      559yNV4Im0BDK+Gggu3yxcyvzFMxBAvTMy5XBSe/+Srl9XniKXdnrGpBDpx8mpnr7n/3SmoZ
      qakXv0smE0aZSHsvdS6Krt2DrPo5eOIk87cGaut0TUnN41qIL/Pkt15zTdN26GmKN66z75Wt
      2/dsRMPOvdS1trseH+o6QtPKVRoOO5UTfADLNIl27+HQif2OY+PJHC1tEbp7d7EeL9LZHNjy
      thW2jh1uwS7FSVtR6lTnbun34Is00daeIRVL0dXj4gwkyKwus/fkc6iqO0W+fucBvve/9pHP
      u4+ctPUirQeP094cJOfYyR32vPhNhi9e5fjr7n8TWwny7GsnXY+XA/XsO7QLXa2rmb9coKnv
      MC3r19h39BVg2woEbFuBHmcr0P2dyxJoHg+uYthUPdTgUSSJ1Zy3Tamy5KnzuQSe7ceS5L2W
      UKZsembMFgmCHvrl2kKwnvfWJrUuoHo+rzqPxaQMS1B26Ty8T+O+HNJ9eO2vLrYspfxwPAiH
      liTPt2CqpFP08BFYtmB03dtJ9DUFONLhzdvntSmzYQsKHj/m4dUicylvTpc/P9REe8T9jZ6t
      mFyY8fYq9zUFCW/SJuhhkCXo8NjvOV+1SZe8/Y5FD8owQH1AoT74xQcqbPsBtvFYwxUDlFIJ
      3v3n9ygkVjnz5tuM3na2HmRnx5i9fpv09DATpz+g7NSOFMHqpY/IxnKYpTQLV686zmGUC3z8
      z2+iV6pcfetNZidmHWnSS3Oce/cCpdQqn/zsLVKZhzfH27iu6SufMnZ7jpmb/Zz72S/JFrZW
      HoVtsfDJ+1TyBZYunWZ1yL2ZLr++wJmf/ZSFJScTpWD5wimyiQKrNz5l8eY1xxKSZrnAlV++
      g2lUufnWW5Q2a8C3YY7+D8+Rzxc4/6u3uHL+uuP6S8l1+t/7mEJskaHTH7Ay65xvERsbZPLm
      KGAx+MH7juPB5tbbb7IeK3LnzGmG+539AOvTE5z74DLLE3f45OdvEUvUfneX/QGiiFKeUGMb
      XW11ZLPOVo1wVx+VtTlCre3kFmcwDOcnMNoUoZgqsHLtCmYp77gpRQugCQO9nGVhZgnbhdIU
      aemgklxj8PSHFKslFx8BtO7oIL2yxq6nTiJZFtGwgxgjSQTDGtV8kdzsFJkZ9+bGlclJAg2d
      3Pr4U8exdc0hCutxzKqMVCpgW1ufsaz5UawqoBAOyJRLLvInSimKZThw7ACpdYdez4Av2oBd
      yBJubqWSWifjIla/vquXwsoCi9cukEk6/+4g0d4aJJnIsTgzi1F13kdjVw+F1UVaujpZn50m
      f7f3misGsEydfCbFzK3LDIwlOXh46w7uULttytk0pUyBjgO95OMOByEEeqlIObmGsC1yCzOO
      Dalt26CUy5JP53n6d15n6uaA47r0aplcOokWrKdv904Wxx1eDQHlYoFsMkFycoj6vU86+yeE
      jV7MU4kv4u/Yi+Zzr5r1HT+BXEnR2OFQFFcI9FKJSi6LXkhTLuaRpK1/TmGbVPJZCuk05UKO
      YubhpdcfEEClXCK9vsjbPznFUy8957h+y6hSyqZILq3S8+QJCuvOL4BeLlDKJCkXyuipJXIZ
      h8biwqZYKJCLxzj0wkusTU44zlEtl8imksRWUxx95hCx5Vrvtftm0KnVZaaMh4sD5XyW2Gqc
      QChY663b3EpTcz0fjqc2VYJLyXWqxTKa30+1XKGxtw9BraT6wzdlUVhdxpZUop1dmKUiWii8
      pRJsVkusL64SiESo5DLUdfQQrQtt3oMAKKQSpJMZGtvbiC+u0LVvD7Kqbl5SXQiSK0tUqhYN
      zQ0E6xuQgYGl/KZKsLANCivLyP4wmEWkQAOhxgb+/FATSmRrM51RKbI4vUjPwQOUDItTY5uE
      EgiL/OoyQtLw+SVM4SPS3LSlEmxWS6RW1vCFw+jFIlooSnNHKye6NzEyCMH64gJCUtArFbRg
      hM7uDubT1U2V4Eo+QzaRwh8MUcrlaOrtIxDwbakE52MrVEo6jTu6sfQK/nBkayVYWKzPzYPi
      Q8FA8tfR1N5Mr09C2sQMmo2vk0nnCYZD5HNFevbtRtvYH2ArBtgMWzHAw2DZYnMG2ASPYgXa
      igEeBsP23lNgKwbYDG4YYCOyFXNzBtgEj2IF2pQBNsFWDLAZvgwrUM8WDPAwfMYPUOvI7s1G
      71NkLA9rtISganqz1Kqy5DndzWt2nIR3m7NPlT3Z9O/N49V55nVdto3rIEKo5TV4/TgrhkXF
      hU63EV4basiyd5u+EFs3Vn8Yfi1PcJ1f8ZRMYViC9YL7xPV78JpMUefRs1lLiPHoO7BsPPrO
      CJkmFQ+3c7FqcXXeW8J3Sbcco1U3QghB0ePHXCgbVD06wv63F7oJeehDbdq2p30ANNi25w4x
      236AbTzWcGcFMgzGbtxGL2bpP/XB/9/emf3IdeX3/XPvrb2rq7ur933hTkoUKY1EjyhpbI2l
      8YzHHtmxAydBFiAxAvgPCJK3AfwWBEHgxHlIJvYgsTWSBe37xl1cm1s3e1+ruqqrqqtr7dqX
      e/LQJMWRh3Xu6WQmzJDfF4JA/fqce+79nXN+399GxkJVhMjiHOe/OEcyGuLcF2caNq4DQJgs
      Xr7A/OQcqVCA2Lr87lsr5bhx4kuioSi3Tp9kbUVeHyYdWePCJyeIBle4+OkXZLck0Y1CsDJx
      javnr2GaJjPXbkrHEGaNGydPsLy4xsz5c0zfnJbKFFKbLM0GyKc2uPDR55Skx4sgtTJHLpMn
      fOMiS5cuY0rWWJh1YtNTmNUKoStnSUflvobs2hq1SpXY1bNkozHpczS5nLww0oXf5eD5kW5a
      LFwTw3NTjJ++SCGbZmHKQk80YTLz1VkWphdZunaZW1dvSa8+m8Flzn9ykmxig/OfnaJ8+9pn
      SQHK2RS3zl9lefwivp5BLn/8pVTG6WuhsrHCiQ8vMNqhMzUnS4gxaesbJHDzOpm1ZVZm5Ny5
      WTfpHuxl4dp1OgYGWLoup0F1uxOPmWYza0Ixw+qyPCmkuaOb6PwUM+dPCWL44wAAHW5JREFU
      M/6VBQUQNboGh1i4eomp61M0WyiHmE2mmb04zsV336Gq6cjPf0FuaYJ4JEfvY0cpJeJSe6Fe
      KhC5do1KNkJiJUBkYlI6r/StS+RDc+QLDmJX5QW+dASbFfjRwUGWNjN8a0Be6Nfd6icXXmQ9
      lGDmgoVQe1GnfXCYpWvjtHT3EZiUvxOb24uRW+fTt06xa6SNqdvOXEsK4Gnvoq2tidGnniEX
      DWDqckt77spleo4cp7vNTr1etxAJKLhx8hRP//CHdI+NWrr3Vwtppm8s8a0Xf4ObX41z7Psv
      SWWiizNUW8cYG2qnva+TQkbuCb559iyHX3yZtblFipth0lnJqWHWGD91gePff5lv/873GP/0
      C+m8ukfHsBugOzz0tVSZmZFtGDptw0MgBOmFW/j3H5Gusc3TjLejDbOYpal/F5opcwJqONv8
      2FqHaPKaVC0weG1eL722OtfiOXTNmiE7d+kiQ0+/wO6Du3BbYvBMxr84xbO//7tMnD7DMz/4
      gfTZg7du4B59kqEuF3XT5E7pAEsKkN0I4+1oYW0lTK1ucPwHvymVaevqJB0JsfvJIwQScHCv
      pOdvrUbHYB/hhUXW16IYFKVshtAMWv1NRFbWaO/rYn0lKJ2X29eKKCRZXw2xmayw73Bjp54Q
      0NHbQ2Rlhd/+5/+SP/jTf0arr3ExLbNao3Owh9BykM3gEo+98Jx0XsGZSbwdLez/9nGiSYOD
      h7oaC4gqyXQVChGM1i66R/ukY1RzSezNXvIlF06jRPfjRyRjmOhNXoqbIerlKkPP/6Z0jFq1
      RgmDeDrLWEcLV0KbUpm27k6S4SDLt7bXIC1xhJm1Gl1D/QRnF+no7yW0IC+M5fX7KaWijDz5
      JCurKQ49Pgo8YoHu/v1HLJB1PGKBHuERfk1wV11suqZc714DtaLiGrhUC1Dpal3JhYCpiPUq
      DLC92+QtJu3fwY/2jvDMkFot+k+mZwnmrCe4GLrGM8M+pTEqNVOpaJUQKHnzATwOzXLe7h00
      uwylk9xu6MpOQ2cNDEXn5F0F0MByEvod7KQcqUpaHGwfUSrzMhFyyvUbqNQEZcUUP13TcdvU
      0hWFsEDu3ANNCOWr2Z1xrP9WUDPVxvDYdeWkI11Tf/eqnuCdfMPW/ACVEisz85TKFcILC2S3
      JNF6QD6dILC4SmojSnBhkYKFfIBEKMjmRoJ0bJ2NyIZUwcx6ldD8PLlcgfD8HPmC3D9RyibZ
      WFmhXi0TW16mLrvIC0EuGiIT28Csli2wRjtDMZMguhokn9oksrxiISxFsLkWYHMjiTBrpDYl
      kZ1sr1d4YYF8rkhsdYVUQiYjSEfX2crmyURDJDbkBm2tVCAwt0A2lSC0uEQ6JV+vrUScteU1
      CtkUgcWAhY1VEAussBlPba9BXP7sxWya5dllMok4gflFcrfrQVlSgMxGjOxGiPd+8lMunhmn
      JP2YIR6JsfDVSTbSVW6dOkU6L5Exa6QTGc6/+y7nP/iAC+9/Qk2yXZa30hRyWT76y//EwmKM
      S5+elM6rUsgRuX6ey+98QD6xzsqUlVDaHEunv2Rjfpb5E2ekv98J0rENgpdPE40mCZw/yUZK
      osxmlVQiy7n3PmTxyjlOvvupdIxSNkUxl+HsW+9w8dPTlpS/kIgy/sGbnH3zffJZ+caXicdI
      rS0ydXOZrdACU5MBqcxmNMb06S/46LW3uP7xh6ynZN9KhdRmlhM/+xuunL3KxU8+lzvColEC
      l0+xGiuxdOUS4Q2FhBi7IVha3mT/gX46Bnq5fvorqUwhGcc1sI89o+3YWrrpbZfU4dcMwjOT
      HP6t38Jus6PrGkKSD6AbOnPXpnnpX/0ptWyEWES+E7i8XuqYlHJF+vbsppZvzOkLwG63IzTw
      7zqAYyfloS2gmIrj7t9PX28bpgFmUcLRazZCUzd54oXjjJ+8TDYSpir5oA1DZ+HGLM/+6Afs
      O7Kfa5+flcxKI72xweHjR9G9fpbG5Vl6uqixHi/z1HNPsRHb4thzh6QyWxtR2nY/TlerG1ez
      i6rknaDZCEze4Dd+9Ie0+OyWKtxVtjLU2kZ4fF83Vd3NntFtB50lzigei9HZ246vb5CNm1MM
      7H9MKpMr5LHhIRaMcOj549v3vwZaKmoFcHnIxpN09HaTqzkxJN1b8qlNfN2dJKNxXE4Xx16S
      F5NKBgPYvX72Hxrj1pkL7PmOxHkmTNLhNbzdfaQDs5jUKRfVKjVYQbFUQNd1wvOLOHwdNPka
      NywU1Ty4m9hKbfGP/u2/ITgzi93QKTcI687dXq/4yjLJ6AYDh/Y3HkPUqJTLZAtu+jo94OuR
      PkcyHsff4SO9EaPnwGFLBEahXEQznbT29FGOpGjzS/wslRxaUzOp6AYut4dnXzouDZvNbGXw
      2A3i6zH2HDt211b4uXyABcV8AFUjuG4KsordGA0NbAptjEwhmFxXY4EqNZOcIgv0J4d28fyQ
      /IO4F2/dnGRVYRybDj0+tSOnXDOVjeB8Re1NNjvVjWCnYl2gnaCpWqfuViMmHvkBHuGhxt0T
      IJ1O09LS8v96Pv9fQXVHO7c0S0q3zrlX64JwVs1z/od7dtPnfThbsWYyGeVv+OdsgF/2EfUI
      imus7azx28P8HnfiZ3qEBwDrizNMjk9QSG9y4/INeWqfqLNy9RKR4DqF1CaZlKRk+yP8QjxS
      gAcEjiYvwetX+Py903jKMWZXZIGJAo/fz63TZwlfu8jCzcVfyTx/3fBIAR4Q6AIMp41auUpL
      q1caey+EhlmroRkaAwcPKEfMPsI2HinAA4KNtTWaOvt5+oWjTC1vcWCvJJOqXiEeWqdvz27W
      1yLUS6nbiR6PoIJfiz7Bvw7Yf+xZ7rilhvbtA7bb0N4Pmt3N4d/67t3/y2v1PcIvwqMT4BEe
      anzdKLtaJZ1Wywh7ECGEYCmbUJIxxbaXWgWlHXQwcZgVJQ+qYQp8imln0+E1li22Stop0sUa
      BcWMsKFWJwoOfTRNU96dWzU1LzDcowB2u53WVnn1ggcdphDEt+TlO+5FTQgqigqQLqt/BHs8
      BqZCyl65ZpJALUTDrFVxoBZuooqVbJGEYmlEm0/DoSsoP+od7DucTcrf8EN7BRJCUC6q1fas
      lktspbPWY6CEoJhJUy5Zb0YHUC6WFEr83a6qnS9YnpcQJrlUkopCXJIQgnLJ+noJs045t0VN
      oTeSWa+RSSQtZ7QJIShsbZHbyiuXRLyDh1YBspEQf/3vf6Iks3JrgjN/9xqbGauNnKus3prg
      9BvvWB6jlEnykz//C2mRq6/HMAneusnZv3vDcpvUejnH3PgVTr0nL9dyB6ngDD/7i7+y/Pvs
      0gQTJ85QsJA8dQeXPnib8dMXqVr9ls06wbk5XvvLn1oe45t4aBWgpW+Q4RHrrVgBbAiaB/fQ
      brWnlu6gucWDqZA57Wrxs+fgmPVTRtOpFfMMHj6CbvGKYXN6cdlBV7AVzrz1IU69SsFiKLiz
      o4/WFifRWXnC0R0kYzFs1U2CAWu2qGbY6PK7efyF7+w4/OOhVYBUJEihmCUUlHc9uYP10Bpu
      h0HZQkcSAFHJsbGewN9tXdEKmU3y+Swr8/JMKgBRr5JOJjErFcvXgHImTjpn0uq3Hjj2/X/9
      Zxx9/llcTmuGZjWXpV6t0NQpqW90D/YdfZpCySbNB7gX0XiOJ54+YPn338TPRYP+uhjBn67N
      KcnUTEFFMSl+J0zIHo+BqRCvXq6ZrCTVkm/a3AaOHSTSq2AloW4EPzfqU5qXoakbwfudLQx3
      STrrfAMP7QnwCI8A99Cg61sF3gnIqgX/PPZ2unEokLuaYqPoO1DKcEIQyaqxLnZDo0mhahnA
      6kaOlQ3rBh7A6OEuVB7fadPoaVbjtt12XYlvFwKSRbXdvNfnVM5Uc9p1DIV7uq6pVwSMF/Ns
      Ja1fac17O8Qki2VOrcqTi++FMFqVyt3pGsptb1TpLVMIUkU1Htxj15XbKsUzJRYiaimktcc6
      cCm8VV2DNo/aehmK9XdMIaip6THtHptyU3VVbNf4UZPJVkps5Kwrc90UD+YVSAghL9nxfz6K
      tAvl35MQpvK8NE29wJNpKub1mnXrtOlt1Ot15VZSqpC1bf17EOrvZCcw6/W7G6uyAqTnrzF7
      4pTl3+ciAT752ZuEAhZPF2Fy5u03uXZh3LJDpJpPc+79D3jrf75neV7B8TNcfv89lufWLMuc
      eeN1Pn31dQqSUoIaGv/k2YMMNTv5gyfG+L39/ZbHiM7d4OM33uark1ct/d6slvjkf73Kx2+8
      Ky2mVcqm+G9//p/JJ6O8/9d/y5kT5yV/XXDu1ddIpfOc/u//lVUL9GQqFOCn//GnpMMrnHzv
      Q746KW+uPX/hLB++cYLFG+N8+JOfEsvIWDaTj//yvzC9kCQyN8EbP1Xws2xt8smrb7C6vP3e
      lRTALG8Rml5AL1v3hpqGhqhV2FyX1bu//ftaieWpGZan5qlb7Nxob2qlr9vPgWNPWZwViEqR
      jUDAUpPlO9DQyIRDbCYaV50QCCYiadweD7FkgoIKR12vsr60fLdymXxSGqZpsjq1RE2yXs7m
      VoZH+8jHguw9/juItLwLT1tnC/Ua7D16kEpZvqO39g/R5W+ipaePSiZF/+5hqczY0acwagW6
      B/sJr4UwdHmj7CeOPUZhK8e5U5dxiKLlq3ImMEMslmJldrs/tGKBRwc9Bx/HVDjURa2Or9VL
      PmetVIluczK0ew82m46wqmbCJLSRZt8+6zutqTnoHRtGV4ib6ds1SmvvMF2djZPONc1gX4eP
      Ya+D3vYOVFLU66ZG/+7duJ3W1lg3bAyMDTN2aC82Cc1YzCaIBFeJpuvMnPkQWvyN/7gQpONR
      wguzrM4tEVmclb6R5HqQyFqAM2+/TcFoRqvJ7+Sr05NEggHmJ+cY2zdMLiuhfs0qs1OLBOfn
      eeLYM5im9RI9voE9dPhboL49r7t+gHPzK/xkxvp1AOA7u6wZwWa9jqYbGLo1I1iYJqYQGIax
      IyN4OmZh9xQC06yjGzY8dp1en5xtEaaJAHRd55MbUa6vyq8EdwqCCeDfvTSK1++RytRrNXRj
      e12tHIL1eh1N19E1zbIRfGcMAQTTaqzZL8sIFkIgTBPdMHZkBGuFKiULwYZ3nt0Uv6KEmDsv
      0yo0XeeXyzEAmoZuqD2+pus76F2rbmkaNpuSrKG4vjsZ41cBTdPQdvAsqrjz7NxLg7rtOmPt
      jcvxfRNuu45doU78TvNWVd9Rq1ttEZ2GWg8CgN42t7InGDSKCjJCCOUuNKUd9AcoKvYHKDlM
      5fUqVNWYrXQqTyqlxs8e6mtBs1t/96Z5jwK0uGw8M6TWjOFXsXcI5XE0+hSdNBo7cLv3NTPQ
      oViAShNsWTAk72C787naEJGtinKvA9V9yWVT7+IeyVaVFHPiVpRbt+Rtb+9F1yuH8Xutb+Km
      eED9AI/wCL8qGD/+8Y9/DJDMbZG8T9vMfDzKu699wu49/bz5V29y8KnHpYZWYOIa16+uQCHG
      5RPnaO4fxeu2N+jgYXLu9dcoe3oJXP+KWzcWGdm3q2HR30o+y1v/4w32Hn2MtYkLrIRL9Pa1
      N5xXfGWBU5+N0+mucvbMVXwdXTR5nA3mJZj48gvWNutkgrPMTS3SMzZKpWbeN2ldmDXO/M2r
      NPcNsnjlIlPXphk9sBePBtX7xCmsTVxlamINkY0yfWMK/+AI9oasjsmlN16j7htk7dpZItEk
      3QP95Cr1+16bqvksX/3dO/SO9jF3/hyhlQi9o0MNdnPBrc++oKmjg8nPPyaVyNE12E+TQ79v
      55qtaIgv3z1Nm7fOpS9PYTR30tLSRK5s3vckX7p0hsXrkxQySWYvXaJ7zwES8SwbG/fxtGsG
      Lz+1h90dHrr7emg3KkS3Kjy9vxt3yy+OJI3OT3Pp3BQuPcfVk+dwtvfhbXJaOwFcbR14bQK7
      x0ur12GhewkMHDxMKR5mcP8BqBTQpFcMjf0HBkkkinT2dhFYXpVefWzuJtpb3JSySSavTlNI
      paQy/sFR9FKWxOYmuUyWWk1+Jdl1cC9b8U1unj9NcnOTSklC7WkG/YOdFMsGB44ewO2Rhx33
      HXic8uY6yUScXCpjwTjV2L2vn0Qswcz4OIloXCpjczdtv3R3Kz39XbRYiJx0GlXKxSLx5SXi
      gZD0956OHlxU2AxHcDW1MHNe7tAbOHiIamGLdCzBkSPDBBclnWhEnZlwCqfdzsx6mnavPD+j
      c2wv5tYmHQMDxIOrFG/XXbKkAMVsivVAgPBqgEgwyPqaPOAoHtr+7Wd/+yq2jiHcslBYUSe4
      HCS0OE8mW8LrtkkdO9VSnvVggMDsIs2tPiIhubc5E48SCQSoai76u7yszEt6CwtYD6yytrJC
      a+cQTXqVdFbWvaVCJBAgtrbG9VMXOPLdZ6Xz2gwFiAaDeFracWsFojFJqUNRZ311jdhaiI6+
      YSqZlDSxv1bKk1xfI7keITC/ytCBMckYgq3EBvGlGZp6d2E35MZyIZMgGgzg6eqntpWic3hI
      KnP+jZ/RProPXZSZujpDa3djW1QznPzJt3ezGE0x1NnCSHebdIxUNEwkEGB1doWR/SOkNrad
      gD/XH2DxPv0BapUyhVwBm8NOrVLF7nLh9rgb7ralfI5KpYZh6NRrddw+H3Zbg77CwiSXyWKi
      o4k6QrPR3NKMQNzXEKzXquSzOWxOF26Pk1rNxG5vTG1WigVKxTJ2p4NSvoiv3Y/N0BvMazvv
      tFoXuN0OtrIF/F3tpPJVcvdhT4Sok09vodvt2B02bA4nGtCuCQr3YSlK+RzVSg273aBUrtHi
      bwW0+xvBwiSfzSIwsNugXBU0t/qINjCCzVqVUi6P4XRiGAa22+1u7ns2C0EpvwWaDbNSRHd5
      cbmddDbZaL5PR9FquUSpUMRmd1AsFGjt7EDXtIZGcCmXpV4XOF1OCvkiPn8bExNrDYxgDZ/H
      se2X0XQMDTKFMn/2ymH8g79YGcqFPOVyBZvNRrlUxtfuR9M0a34Am8OJz28xDfA2XE1eXCok
      iabj/QUJOY1OdcNmx+f/+oHtFmKNHW4PDve2M8rdZGGCmobH9/WO1O6SZytpmoG3TS256N71
      cnm3/214o9F0mlq+HsPK29FtdjwqSU+ahst7+9mb5A48ALvThd25zcS4LZZpvzsG4HNaYXEE
      2YJaopDT04TTsz0fT3Mz8I1w6KopSCnGhXsdBgqVLrYHVW3/vQPsxLdTVxRy2hqcGveBVq4p
      zU0DPA61Be5oskt7hX0TdsXn8Dh0HIp9gtvcNku24x3sHfYrh6i73Q5KFuPHALjXE1wzBWnF
      OHqXTcemEOglhFDiguF2XLhio2xVCCHUGn4DLrtGs6LXslBRC0HWdZQ/ApuhKa+xRzFJSeVD
      vgNNUxvDN9LGriH53f5eOCs1Mgo+EI0dhEJsmwyarCfZvQIIrMWnfJPFUJGxngSybVPc6dn3
      oMzr698/qPNSXV8NYQrQ5U4z9TF28uy35wU/9z1aUoDCZpST75zk+MtPMnVjlta+PRz61sGG
      MoGbV5lbytDTWmUtlOC5P/pjfI0C4cwKFz/6nGwJvLYaBWy8+Ps/aOhyzyciXDk7jrO5g42Z
      SZ79x/+UjrbGd/TA5A3mJmZpHx4jHQ3Tf/Ap9h1owFQIkxsnviS2kaN/uIPIcoRv/9E/wOW9
      /7OY1Txfvv0ZepOfA2M+Jpe2+N4PX2g4r/lL5wivROgcGWJzZZmD33tluzPjfQepcPb9T8lV
      dLr8DqLxEt//hz9sOEYuHmb8/DWa2vpp1uPkHSM89cy+Bs9e58aXX5CtN1GMrjLwxFM8dqRx
      BYbI/DQT12Zo7+sjvh7jie88T19v40rXU1+dJhzYoH/PKCvXrvKtP/4XdLQ28OabZS5+8Bll
      00Cv56nqzbz4yvcajrF64wqB6QVaBkbYDAc5/NLv0t3hs+gH8HfR0uykXsqxsbpCJilPBRx8
      /CgilySXzcNWnAUZt6s76B3qwW4zsblaaHPapPHnTf4u3LY6zV2djO0doCzj54HeXWPUymWG
      D+1HlAs0tUgMNU1nYNcI6Bo9g/2EAvJyJbrNQ3e3D6dTcOHCFEYhKfVPDOzZTbVWY2j/HqqV
      Cm5Z9QjdQf9QDw6Pm67eDkJBOUfv7ejBpVUxtAKL80GKslqwmoGnrQ2Pz06uUCIRk+cPdI2O
      ISoFIgtT5HNbxMLyPPOhPbuo1evsPvokzuYOemQxabqT7oFOHB4HiVCQyKr82Xt37aJSqZFN
      pHn+pW8TXtiWsaQA+USE9aV5ggtBOoZH0euSRsbA2uwtAgsLtPT2Ua67GBlpHHsuKlk+f/tz
      Wjt7SMeChGMJ7JJQ68j0OLNLCVx6jYVbMyxbKMJ0/t230H0dTH78LluiSWrDCLPGZ6+/SVtn
      F+vLAbp7/eS3GjMQlWyYE59fxevxMjw2zEZMrgBfvvY6bT29nH/zDZxtXSBx0JmVDB+99Tkt
      vmYioTjeJoc0LTI8eYmFQAa3c9uDmkk1VgBRrzB/+SJNdhv+nh5ia/IP7erH71HQfQyMjuF0
      e8hsSDY+4JNXt589MXeDrkNPSK9MZjnFqQ9O4fU24fT68TTJY7/Ov/0mno5umpxw+qPTtPV1
      Avf4ASbX1jiXkGt4rVrBsNnRtO2KBTYJGyDM7Txam91m2Qg26zVMoWGzGQ+UESxME9MUGDYD
      l01TqogBUEiXyagUiNWhs0mep2DW6wg0DEOnqBgNCtaM4Hqtim7Y0TTrRnC1XMHu3P44i5br
      Hd6WrZuWciHMeg2BjmHo20awbH2FoFqtYnc4dmYE2+yKkZa6jk2RK9UN2wMZpafpaiVHflVQ
      zbfYCQybeunxOx//LxOqOR1oGnbH1/O6K61r23VolAZXrHigaRqaanCzpsA4AWjWsqi+KaP6
      XXvtTpoVN4OKXlVSIEPTqClu521ON4YC5ajBfQPb7gchLCer3kXFLpTi2usC5WcPJTdYTVtL
      vYVtxu3r/gC6hl+xBo3d0BpEUf5iGKqeM0UIIZQXTkdTSuwBGPa2MdSsxlNnMzkq0oTvryGE
      oKiozd/q7KTD/XA2yv4PXy3y/nnrxXh3svE9wiP8WsHSlp9aW+LmtRkGRscIr66y68iTDAz1
      NJSZu3KRcCjB2IFdrEwvcez3fgdPo3Q1UeX8x19Qd/jwOWuEIlle/sPfbRgTX0jFuHj6Mh39
      g8TXVukY2c/how14bSA0M8nC9DK9I/2EAyGOvPgSna0NdkxhcvPsaTJ5jc52N5F4mhe+35hz
      3gnmrlwgGk7T2dvKejjOCz/6YeMQBbPC5c9OoDW146znKGhOjr0gjzp9WLFnsId9vT5WIikG
      u/2sBNaY2yxYOwF8PUO0eWBteZFoeANNlxtdo48/RjER5fwnH5PJbVng6G3sP3KQzfUIjx97
      GsMUUobJ5WtnsK+N+HqQxZtTLM+sSOfVs2s3tmqWGxcnaG12M3FpSiKh4e9qZ3l2nkgwxmiH
      i1A4Kx1HFaOPPUYhEWH6xhzucpLpeUmfM81Oq9/L8uQE+YIGWxmqFnIbHlasRjbRXB6SmwmK
      QrBxm8q2pACBa2eJFJo4+MRjPPvdZ5k4e0kq88XPXmfk6ecY6B9k96CPleXGfLAwi7z7N+/y
      zIsvMH/5Ent+49tS93YyOMv4ZIR9I36GnzqOXpMbQNc//whb735++5WXyMTi+HsaZ5AJIdBs
      bvwtTrLZLcLhGJ5mtchYK/jytdcYfeY5nnvpOJsbOTolMfGiVsLl78Oum+SzSTJbW0p08cOG
      F5/az+b6Olu6i2ZRIVXa3iwsXYG69z6B3pLA5vFSiMf5zisvS2WefuklcvkyIy+/TDgQ5sBj
      fRIJO9995fvUqxUGHj+Kp0UettvcNcSxZ+04/R0csMdo7pFXhtvz9LOkk1nQHQw/+Qwj+yVJ
      IZqGoWscffG7+FtcxJNFulr/7yvAt377ZQrFKobTxZEf/j59bRKGybCj1Soc/9Ef4KBEWTix
      PYgc7QOCq3MBWt12tHqNE5Nf17+66wibXw8xXVI72h07YoF+ubvUNnOiygKhzAIdbOtWZoHO
      LM2SUmSBVOnG53uHH14W6PUveVWRBfrf75D0wo7yne8AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
